openapi: 3.0.0
info:
  version: v2
  title: API v2 test
  description: |-
    # Entenda a API


    A versão 2 da API AnyMarket é um passo a frente no sentido de facilitar a integração de nossos parceiros aos diversos marketplaces disponíveis. A criação da API permite que aplicações existentes ou novas aplicações estendam suas operações de venda de forma simples.

    Uma vez que você tenha solicitado seu token de acesso ao nosso suporte, é fácil começar a integração com o AnyMarket.

    Todos as URLs são acessíveis através do host sandbox-api.anymarket.com.br. Por exemplo: Você pode recuperar todas as suas categorias acessando a URL com o seu TOKEN de acesso (substitua TOKEN pelo seu próprio):

    ```
    http://sandbox-api.anymarket.com.br/v2/categories?gumgaToken=TOKEN
    ```

    É necessário informar o seu token de acesso para todas as URLs que serão acessadas. Além de utilizá-lo como parâmetro na URL, é possível passá-lo como cabeçalho da requisição. O nome gumgaToken deve ser utilizado para ambas as formas.

    ## Limites

    Seja legal. Se você estiver enviando muitas requisições rapidamente, nós retornaremos um código de erro 429 (too many requests). Você tem um limite de **10 requisições por segundo** por token.

    ## Operações

    [cadastrar um produto](#497ef920-87bd-4a3f-b91e-19abadb3f7c0) 

    Nós fazemos o nosso melhor para que todas as nossas URLs sejam [RESTful](http://en.wikipedia.org/wiki/Representational_state_transfer). Cada URL pode suportar um dos quatro diferentes tipos de verbos http:

    -   **GET** obtém informações sobre um recurso
    -   **POST** cria um recurso
    -   **PUT** atualiza um recurso
    -   **DELETE** exclui um recurso

    ## Estrutura

    ### Paginação

    A grande maioria das requisições que retornam uma coleção de recursos são paginadas. Por exemplo, a consulta de categorias principais. Toda resposta paginada é retornada no seguinte formato:

    ```
    {
      "links": [
        {
          "rel": "prev",
          "href": "http://sandbox-api.anymarket.com.br/v2/categories?offset=0"
        },
        {
          "rel": "next",
          "href": "http://sandbox-api.anymarket.com.br/v2/categories?offset=4"
        }
      ],
      "content": [
        ...
      ],
      "page": {
        "size": 2,
        "totalElements": 6,
        "totalPages": 3,
        "number": 1
      }
    }
    ```

    Para facilitar a navegação sequencial de dados, nós disponibilizamos links para ir a próxima página ou retornar a anterior.

    Por padrão a consulta retorna 20 recursos por página. No entanto, nós permitimos que esse número seja aumentado até um máximo de 100. Abaixo segue os parâmetros que alteram a forma como a pagina é retornada:

    -   **offset:** Indica a partir de qual recurso a consulta irá começar
    -   **limit:** Indica a quantidade de recursos a serem retornados, indo de 20 a no máximo 100.
    -   **sort:** Indica por qual atributo a consulta deve ser ordenada


    # Fluxo de integração
    ## ANYMARKET como centralizador:

    Nesse cenário, os pedidos do parceiro deverão ser enviados ao ANYMARKET, o qual será responsável em realizar o controle de estoque. Com os pedidos centralizados no ANYMARKET o parceiro poderá usufruir de outras integrações que o ANYMARKET possui. Ex: os pedidos poderão ser enviados aos ERPs integrados ao ANYMARKET, não precisando o parceiro possuir a integração com o ERP.

    Aplicação AnyMarket

    Parceiro

    Produto/Estoque/Preço

    Pedido

    Atualização Pedido

      

    ## Sua plataforma como centralizador:

    Nesse cenário, os pedidos do parceiro deverão ser enviados ao ANYMARKET, o qual será responsável em realizar o controle de estoque. Com os pedidos centralizados no ANYMARKET o parceiro poderá usufruir de outras integrações que o ANYMARKET possui. Ex: os pedidos poderão ser enviados aos ERPs integrados ao ANYMARKET, não precisando o parceiro possuir a integração com o ERP.
    ![enter image description here](https://dnc.group/blog/wp-content/uploads/2020/09/5.1.png)
    ## Sua plataforma como centralizador:

    Nesse cenário, o PARCEIRO sempre será o responsável por enviar o estoque da plataforma para o ANYMARKET, receber PEDIDOS e enviá-los para o ERP. Para que o cliente tenha o fluxo de integração completo, é necessário que o PARCEIRO tenha sempre integração com o ERP desejado do cliente, pois o ANYMARKET não permite que tenha dois back office integrados em sua API.  
    Para utilizar esse fluxo é necessário que o parceiro realize o cadastro de produtos no ANYMARKET. O estoque deverá ser controlado pelo parceiro. O parceiro deverá atualizar os dados de faturamento e envio para o ANYMARKET além do status de concluído.
    ![enter image description here](https://dnc.group/blog/wp-content/uploads/2020/09/5.1.png)

    ## Fluxo: Cadastro de produtos

    Para a realização do cadastro de um produto no AnyMarket, alguns itens devem ser cadastrados antecipadamente, como por exemplo: Categoria e Marca.

    #### Importante

    O cadastro da Categoria e Marca só é necessário caso a mesma não tenha sido incluida pela aplicação.

    # Ambiente de sandbox

    Para permitir que o integrador teste suas funcionalidades e assegure de que irá operar sem erros no ambiente de produção, o AnyMarket disponibiliza o ambiente de sandbox. Os testes realizados nesse ambiente certificam a aplicação de que todas as regras de API estão sendo aplicadas.

    O ambiente de sandbox do AnyMarket possui as mesmas operações do ambiente de produção, no entanto, as informações são distintas do ambiente de produção. Os ambientes de sandbox e produção são isolados e não possuem acesso um ao outro.

    Os tokens de acesso obtidos através do contato com o AnyMarket dão acesso aos dois ambientes, porém cada ambiente requisita seu próprio token. Não é possível acessar o ambiente de produção com o token da sandbox e vice-versa.

    Uma vez obtido o Token de Sandbox, a Aplicação opera de forma idêntica ao ambiente de produção. A principal diferença é que a Aplicação deve apontar para o ambiente de Sandbox ao invés de Produção.

    URL de sandbox:

    ```
    http://sandbox-api.anymarket.com.br/v2
    ```

    URL de produção:

    ```
    http://api.anymarket.com.br/v2
    ```

    # Observações
    Todo Atributo que receba uma **Data** deve ser informada passando o **Fuso Horario.**  
    Se o parceiro controla o Fuso Horário deverá controlar também o **horário de verão**, fazendo as alterações necessárias.

    Exemplo:  
    **08/03/2018 10:00:00** Fuso Horário **GMT-3**  
    Deve ser informado da seguinte forma **2018-03-08T10:00:00-03:00**
    ![enter image description here](https://i.imgur.com/Kd564pu.png)

    #### Criação de Pedidos Teste

    Para a execução dos testes da parte de pedidos, realize o download do documento de apoio abaixo.

    [Documento de Apoio a criação de Pedidos.](http://developers.anymarket.com.br/Criando_Pedidos_de_Teste.pdf)
tags:
  - name: Callback
    description: Gerenciamento de callbacks
  - name: Categoria
    description: Gerenciamento de categorias
  - name: Local de Estoque
    description: Gerenciamento de Locais de Estoque
  - name: Estoque
    description: Gerenciamento de stock
  - name: Feed pedido
    description: Gerenciamento de feed de pedidos
  - name: Feed produto
    description: Gerenciamento de feed de produtos
  - name: Feed transmissão
    description: Gerenciamento de feed de SKUs
  - name: Frete
    description: Gerenciamento de frete
  - name: Imagem
    description: Gerenciamento de imagens
  - name: Pedido
    description: Gerenciamento de pedidos
  - name: Marca
    description: Gerenciamento de marcas
  - name: Monitoramento
    description: Monitoramento de erros
  - name: Perguntas
    description: Gerenciamento de perguntas
  - name: Produto
    description: Gerenciamento de produtos
  - name: SKU
    description: Gerenciamento de skus
  - name: SKU Marketplace
    description: Gerenciamento de anúncios
  - name: Template
    description: Gerenciamento de templates
  - name: Transmissão
    description: Gerenciamento de transmissões
  - name: Tipos de variação
    description: Gerenciamento de tipos de variação
  - name: Valores de variação
    description: Gerenciamento de valores de variação
  - name: Emissão de Etiquetas
    description: Gerenciamento de Emissão de Etiquetas
  - name: Mensageria
    description: Gerenciamento de Mensagens nos Pedidos
paths:
  /categories:
    post:
      tags:
        - Categoria
      summary: Cria uma categoria com os dados informados
      description: |-
        ## Limites

        Seja legal. Se você estiver enviando muitas requisições rapidamente, nós retornaremos um código de erro 429 (too many requests). Você tem um limite de **10 requisições por segundo** por token.

        ## Operações
        Cria uma categoria com os dados informados

        ## Limites

        Seja legal. Se você estiver enviando muitas requisições rapidamente, nós retornaremos um código de erro 429 (too many requests). Você tem um limite de **10 requisições por segundo** por token.

        ## Operações
      requestBody:
        $ref: '#/components/requestBodies/PostCategory'
      responses:
        '200':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryDetail'
        '400':
          description: Bad request
      deprecated: true
  /categories/fullPath:
    get:
      tags:
        - Categoria
      summary: Consulta todas as categorias e sua hierarquia completa
      description: |
        Consulta todas as categorias e todos os níveis de hierarquia, por exemplo:
        #teste
        - Eletrônicos
          - Acessórios
            - Cabos e Conectores
              - Cabo coaxial
          - Smart TV
        - Esporte e Lazer
          - Fitness
            - Masculino
              - Bermudas
                - Futebol
            - Feminino
              - Regata
          - Futebol
        - Eletroportáteis
          - Cafeteiras
          - Liquidificadores

        Serão listadas todas as categorias e cada um dos sub-níveis respectivamente até o final da hierarquia
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CategoryFullPath'
  '/categories/{id}':
    get:
      tags:
        - Categoria
      summary: Consulta os detalhes de uma categoria
      description: |
        Recupera os dados da categoria informada e as categorias filhas, caso existam
      parameters:
        - name: id
          in: path
          description: Id da categoria gerada pelo ANYMARKET
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryResponse'
              examples:
                example-1:
                  value:
                    id: 0
                    name: string
                    parent:
                      id: 0
                    partnerId: string
                    priceFactor: 0
                    children:
                      id: 0
                      name: string
                      partnerId: string
                      priceFactor: 0
                      definitionPriceScope: string
                    definitionPriceScope: string
        '404':
          description: Not found
    put:
      tags:
        - Categoria
      summary: Atualiza os dados de uma categoria
      description: Atualiza os dados de uma categoria
      parameters:
        - name: id
          in: path
          description: Id da categoria gerada pelo ANYMARKET
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/PostCategory'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryResponse'
        '400':
          description: Bad request
        '404':
          description: Not found
    delete:
      tags:
        - Categoria
      summary: Exclui uma categoria
      description: Exclui uma categoria
      parameters:
        - name: id
          in: path
          description: Id da categoria gerada pelo ANYMARKET
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: No content
        '400':
          description: Bad request
        '404':
          description: Not found
  /callbacks:
    get:
      tags:
        - Callback
      summary: Consulta todos os callbacks disponíveis
      description: Consulta todos os callbacks disponíveis
      parameters:
        - name: offset
          in: query
          description: Posição de início da paginação
          required: false
          schema:
            type: integer
            format: int64
        - name: limit
          in: query
          description: Número máximo de categorias
          required: false
          schema:
            type: integer
            format: int64
        - name: sort
          in: query
          description: Atributo para ordenação
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page_Callback_'
    post:
      tags:
        - Callback
      summary: Cria um callback com os dados informados
      description: Cria um callback com os dados informados
      requestBody:
        $ref: '#/components/requestBodies/PostCallback'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties: {}
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Callback'
            application/xml:
              schema:
                type: object
                properties: {}
            application/zip:
              schema:
                type: object
                properties: {}
              examples: {}
        '400':
          description: Bad request
  '/callbacks/{id}':
    get:
      tags:
        - Callback
      summary: Consulta os detalhes de um callback
      description: Recupera os dados do callback
      parameters:
        - name: id
          in: path
          description: Id do callback gerado pelo ANYMARKET
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Callback'
        '404':
          description: Not found
    put:
      tags:
        - Callback
      summary: Atualiza os dados de um callback
      description: Atualiza os dados de um callback
      parameters:
        - name: id
          in: path
          description: Id do callback gerada pelo ANYMARKET
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/PostCallback'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Callback'
        '400':
          description: Bad request
        '404':
          description: Not found
    delete:
      tags:
        - Callback
      summary: Exclui um callback
      description: Exclui um callback
      parameters:
        - name: id
          in: path
          description: Id do callback gerada pelo ANYMARKET
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: No content
        '400':
          description: Bad request
        '404':
          description: Not found
  /stocks:
    get:
      tags:
        - Estoque
      summary: Consulta os detalhes de um estoque
      description: Consulta os detalhes de um estoque
      parameters:
        - name: idSku
          in: query
          description: Atributo para filtrar pelo id do sku
          required: false
          schema:
            type: string
        - name: idStockLocal
          in: query
          description: Atributo para filtrar pelo id do estoque local
          required: false
          schema:
            type: string
        - name: sku
          in: query
          description: Atributo para filtrar pelo sku
          required: false
          schema:
            type: string
        - name: offset
          in: query
          description: Posição de início da paginação
          required: false
          schema:
            type: integer
            format: int64
        - name: limit
          in: query
          description: Número máximo de pedidos
          required: false
          schema:
            type: integer
            format: int64
        - name: sort
          in: query
          description: Atributo para ordenação
          required: false
          schema:
            type: string
        - name: sortDirection
          in: query
          description: Atributo para direcionar a ordenação (ASC ou DESC)
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StockUpdate'
    post:
      tags:
        - Estoque
      summary: Cria o estoque para um determinado SKU e Local de Estoque
      description: |
        Será criado o estoque para o SKU e o Local de Estoque informado com todas as informações de quantidade, custo e prazo adicional.
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/StockUpdate'
        description: Lista com dados de estoque e custo para criação
        required: true
      responses:
        '204':
          description: No content
        '400':
          description: Bad request
    put:
      tags:
        - Estoque
      summary: 'Altera o stock, prazo adicional e o custo de uma lista de SKUs'
      description: |
        Será utilizada para realizar a atualização de estoque, prazo adicional ou do custo médio. A operação de estoque é realizada em batch, ou seja é possível enviar um ou mais SKUs para atualização.


        A atualização
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/StockUpdate'
        description: Lista com dados de stock e custo para atualização
        required: true
      responses:
        '204':
          description: No content
        '400':
          description: Bad request
  /stocks/locals:
    get:
      tags:
        - Local de Estoque
      summary: Lista os locais de estoque
      description: |
        Utilizada para listar os dados de locais de estoque.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StockLocalGet'
    post:
      tags:
        - Local de Estoque
      summary: Cria os locais de estoque
      description: |
        Utilizada para criar os dados de locais de estoque.
      requestBody:
        $ref: '#/components/requestBodies/StockLocalPost'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StockLocalGet'
    put:
      tags:
        - Local de Estoque
      summary: Altera os locais de estoque
      description: |
        Utilizada para alterar os dados de locais de estoque.
      requestBody:
        $ref: '#/components/requestBodies/StockLocalPost'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StockLocalGet'
  '/stocks/locals/{id}':
    delete:
      tags:
        - Local de Estoque
      summary: Exclui o Local de Estoque
      description: Exclui o Local de Estoque
      parameters:
        - name: id
          in: path
          description: Id do Local de Estoque gerado pelo ANYMARKET
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: No content
        '400':
          description: Bad request
        '404':
          description: Not found
  /orders/feeds:
    get:
      tags:
        - Feed pedido
      summary: Consulta todos os pedidos alterados
      description: |
        Quando um pedido é criado ou alterado no ANYMARKET, o mesmo é disponibilizado para consulta través desse feed e fica disponível por 30 dias. O resultado da consulta de feed retorna 10 itens disponíveis aleatóriamente.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderFeed'
  '/orders/feeds/{id}':
    put:
      tags:
        - Feed pedido
      summary: Marca o feed como processado
      description: |
        Após consulta do pedido através do feed, é preciso marcá-lo como lido. Caso não seja marcado, o mesmo continuará a ser trazido na consulta.
      parameters:
        - name: id
          in: path
          description: Id do pedido gerado pelo ANYMARKET
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderFeedPost'
        description: Dados para atualização do feed
        required: true
      responses:
        '204':
          description: No content
        '400':
          description: Bad request
  /products/feeds:
    get:
      tags:
        - Feed produto
      summary: Consulta todos os produtos alterados
      description: |
        Quando um produto é criado ou alterado no ANYMARKET, o mesmo é disponibilizado para consulta através desse feed e fica disponível por 30 dias. O resultado da consulta de feed retorna 10 itens disponíveis aleatóriamente.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductFeed'
  '/products/feeds/{id}':
    put:
      tags:
        - Feed produto
      summary: Marca o feed como processado
      description: |
        Após consulta do produto através do feed, é preciso marcá-lo como lido. Caso não seja marcado, o mesmo continuará a ser trazido na consulta.
      parameters:
        - name: id
          in: path
          description: Id do produto gerado pelo ANYMARKET
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductFeedPost'
        description: Dados para atualização do feed
        required: true
      responses:
        '204':
          description: No content
        '400':
          description: Bad request
  /transmissions/feeds:
    get:
      tags:
        - Feed transmissão
      summary: Consulta todos as transmissões alteradas
      description: |
        Quando um SKU é criado ou alterado no ANYMARKET, o mesmo é disponibilizado para consulta através desse feed e fica disponível por 30 dias.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TransmissionFeed'
  '/transmissions/feeds/{id}':
    put:
      tags:
        - Feed transmissão
      summary: Marca o feed como processado
      description: |
        Quando um SKU é criado ou alterado no ANYMARKET, o mesmo é disponibilizado para consulta através desse feed e fica disponível por 30 dias. O caso não informado um limit o resultado da consulta de feed retorna 10 itens disponíveis aleatóriamente.
      parameters:
        - name: id
          in: path
          description: Id do SKU gerado pelo ANYMARKET
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransmissionFeedPost'
        description: Dados para atualização do feed
        required: true
      responses:
        '204':
          description: No content
        '400':
          description: Bad request
  /orders:
    get:
      tags:
        - Pedido
      summary: Consulta os detalhes de um pedido
      description: |
        Consulta os detalhes de um pedido
      parameters:
        - name: createdAfter
          in: query
          description: Criado a partir de
          required: false
          schema:
            type: string
        - name: createdBefore
          in: query
          description: Criado antes de
          required: false
          schema:
            type: string
        - name: status
          in: query
          description: Atributo para filtrar pelo status do pedido
          required: false
          schema:
            type: string
        - name: offset
          in: query
          description: Posição de início da paginação
          required: false
          schema:
            type: integer
            format: int64
        - name: limit
          in: query
          description: Número máximo de pedidos
          required: false
          schema:
            type: integer
            format: int64
        - name: marketplace
          in: query
          description: Atributo para filtrar pelo marketplace do pedido
          required: false
          schema:
            type: string
            enum:
              - CNOVA
              - ECOMMERCE
              - MERCADO_LIVRE
              - GFG
              - NETSHOES
              - VTEX
              - AMAZON
        - name: marketplaceId
          in: query
          description: Atributo para filtrar pelo ID do Pedido no Marketplace
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page_Order_'
    post:
      tags:
        - Pedido
      summary: Cria um pedido com os dados informados
      description: |
        Cria um pedido com os dados informados. Geralmente utilizado por parceiros Ecommerce.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostOrder'
        description: Dados do pedido
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
          description: Bad request
  '/orders/{id}':
    get:
      tags:
        - Pedido
      summary: Consulta os detalhes de um pedido
      description: |
        Consulta os detalhes de um pedido
      parameters:
        - name: id
          in: path
          description: Id do pedido gerado pelo ANYMARKET
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '404':
          description: Not found
  '/orders/{id}/nfe/type/{type}':
    get:
      tags:
        - Pedido
      summary: Envia o XML da NF-e
      description: |
        Retorna o Xml da NF-e para o Seller. Deve ser enviado o tipo de NF-e desejada.
          - atributo 'type' podendo ser:
            - SALE
            - SALE_RETURN
            - SALE_DEVOLUTION
            - GIFT
            - INBOUND
            - DEVOLUTION
            - INBOUND_DEVOLUTION
            - INBOUND_RETURN
            - INBOUND_SUPPLIER_RETURN
            - SYMBOLIC_INBOUND
            - SYMBOLIC_INBOUND_RETURN
            - PURCHASE
            - REMOVAL
            - SYMBOLIC_REMOVAL
      parameters:
        - name: id
          in: path
          description: Id do pedido gerado pelo ANYMARKET
          required: true
          schema:
            type: integer
            format: int64
        - name: type
          in: path
          description: Tipo do Xml desejado
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/XmlFulfillment'
        '404':
          description: Xml não localizado.
        '500':
          description: Bad request
  '/orders/{id}/inbound/marketplace/{marketplace}':
    get:
      tags:
        - Pedido
      summary: Envia o XML da NF-e
      description: |
        Retorna o Xml da NF-e do tipo Inbound para o Seller. Deve ser enviado o marketplace da NF-e desejada.
          - atributo 'marketplace' podendo ser:
            - MERCADO_LIVRE
            - VIA_VAREJO
            - E OUTROS
      parameters:
        - name: id
          in: path
          description: Id de banco enviado pela callback gerado pelo ANYMARKET
          required: true
          schema:
            type: integer
            format: int64
        - name: marketplace
          in: path
          description: Marketplace desejado
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/XmlFulfillment'
        '404':
          description: Xml não localizado.
        '500':
          description: Bad request
  '/orders/{id} (Pago)':
    put:
      tags:
        - Pedido
      summary: Atualiza os dados do pedido informado (Pago)
      description: |
        Atualiza os dados do pedido informado. Os dados para atualização não são obrigatórios e caso não seja informado algum deles, o pedido permanecerá com os dados atuais.
      parameters:
        - name: id
          in: path
          description: Id do pedido gerado pelo ANYMARKET
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderUpdatePaid'
        description: Dados do pedido
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
          description: Bad request
  '/orders/{id} (Faturado)':
    put:
      tags:
        - Pedido
      summary: Atualiza os dados do pedido informado (Faturado)
      description: |
        Atualiza os dados do pedido informado. Os dados para atualização não são obrigatórios e caso não seja informado algum deles, o pedido permanecerá com os dados atuais.
      parameters:
        - name: id
          in: path
          description: Id do pedido gerado pelo ANYMARKET
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderUpdateInvoiced'
        description: Dados do pedido
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
          description: Bad request
  '/orders/{id} (Enviado - Em Transito)':
    put:
      tags:
        - Pedido
      summary: Atualiza os dados do pedido informado (Enviado - Em Transito)
      description: |
        Atualiza os dados do pedido informado. Os dados para atualização não são obrigatórios e caso não seja informado algum deles, o pedido permanecerá com os dados atuais.
      parameters:
        - name: id
          in: path
          description: Id do pedido gerado pelo ANYMARKET
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderUpdateDelivery'
        description: Dados do pedido
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
          description: Bad request
  '/orders/{id} (Concluido)':
    put:
      tags:
        - Pedido
      summary: Atualiza os dados do pedido informado (Concluido)
      description: |
        Atualiza os dados do pedido informado. Os dados para atualização não são obrigatórios e caso não seja informado algum deles, o pedido permanecerá com os dados atuais.
      parameters:
        - name: id
          in: path
          description: Id do pedido gerado pelo ANYMARKET
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderUpdateConcluded'
        description: Dados do pedido
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
          description: Bad request
  '/orders/{id} (Cancelado)':
    put:
      tags:
        - Pedido
      summary: Atualiza os dados do pedido informado (Cancelado)
      description: |
        Atualiza os dados do pedido informado. Os dados para atualização não são obrigatórios e caso não seja informado algum deles, o pedido permanecerá com os dados atuais.
      parameters:
        - name: id
          in: path
          description: Id do pedido gerado pelo ANYMARKET
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderUpdateCanceled'
        description: Dados do pedido
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
          description: Bad request
  '/orders/{id}/nfe':
    put:
      tags:
        - Pedido
      summary: Envia o XML da NF-e
      description: |
        Envia o XMl da NF-e para o Marketplace. Deve ser enviado apenas o conteúdo do XML.
      parameters:
        - name: id
          in: path
          description: Id do pedido gerado pelo ANYMARKET
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/xml:
            schema: {}
        description: Conteúdo do XML
        required: true
      responses:
        '200':
          description: OK
        '500':
          description: Bad request
  /questions:
    get:
      tags:
        - Perguntas
      summary: Consulta as perguntas disponíveis
      description: Consulta as perguntas disponíveis. Atualmente apenas para o MarketPlace MercadoLivre.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuestionsResponse'
  '/questions/{id}':
    get:
      tags:
        - Perguntas
      summary: Consulta os detalhes de uma pergunta
      description: Consulta os detalhes de uma pergunta. Atualmente apenas para o MarketPlace MercadoLivre.
      parameters:
        - name: id
          in: path
          description: Id da pergunta
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Questions'
        '404':
          description: Not found
  '/questions/{id}/answers':
    get:
      tags:
        - Perguntas
      summary: Consulta as respostas de uma pergunta
      description: Consulta as respostas de uma pergunta. Atualmente apenas para o MarketPlace MercadoLivre.
      parameters:
        - name: id
          in: path
          description: Id da pergunta
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnswersResponse'
        '404':
          description: Not found
    post:
      tags:
        - Perguntas
      summary: Insere uma nova resposta na pergunta
      description: Insere uma nova resposta na pergunta. Atualmente apenas para o MarketPlace MercadoLivre.
      parameters:
        - name: id
          in: path
          description: Id da pergunta
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnswerPost'
        description: Dados da resposta
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Answers'
        '400':
          description: Bad request
  '/questions/{id}/answers/{answerId}':
    get:
      tags:
        - Perguntas
      summary: Consulta os detalhes de uma resposta
      description: Consulta os detalhes de uma resposta. Atualmente apenas para o MarketPlace MercadoLivre.
      parameters:
        - name: id
          in: path
          description: Id da pergunta
          required: true
          schema:
            type: integer
            format: int64
        - name: answerId
          in: path
          description: Id da resposta
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Answers'
        '404':
          description: Not found
  /products:
    get:
      tags:
        - Produto
      summary: Consulta os detalhes de um produto
      description: Consulta os detalhes de um produto
      parameters:
        - name: offset
          in: query
          description: Posição de início da paginação
          required: false
          schema:
            type: integer
            format: int64
        - name: limit
          in: query
          description: Número máximo de produtos
          required: false
          schema:
            type: integer
            format: int64
        - name: sku
          in: query
          description: 'Código do SKU do parceiro (Quando informado, filtra apenas os produtos que contém esse SKU)'
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page_Product_'
    post:
      tags:
        - Produto
      summary: Cria um produto com os dados informados
      description: Cria um produto com os dados informados
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductPost'
        description: Dados do produto
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '400':
          description: Bad request
  '/products/{id}':
    get:
      tags:
        - Produto
      summary: Consulta os detalhes de um produto
      description: Consulta os detalhes de um produto
      parameters:
        - name: id
          in: path
          description: Id do produto gerado pelo ANYMARKET
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '404':
          description: Not found
    put:
      tags:
        - Produto
      summary: Atualiza os dados de um produto
      description: |
        Após o cadastro do produto as imagens e o SKUs só podem ser atualizados através das suas APIs específicas.
      parameters:
        - name: id
          in: path
          description: Id do produto gerado pelo ANYMARKET
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductUpdate'
        description: Dados do produto
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '400':
          description: Bad request
    patch:
      tags:
        - Produto
      summary: Atualiza dados parciais de um produto
      description: |
        Após o cadastro do produto as imagens e o SKUs só podem ser atualizados através das suas APIs específicas.
      parameters:
        - name: id
          in: path
          description: Id do produto gerado pelo AnyMarket
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/ProductMergePatch'
        description: Dados do produto
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '400':
          description: Bad request
  '/products/patch/{productId}':
    patch:
      tags:
        - Produto
      summary: Atualiza dados parciais de um produto utilizando RFC 6902
      description: 'Após o cadastro do produto as imagens e o SKUs só podem ser atualizados através das suas APIs específicas. '
      parameters:
        - name: productId
          in: path
          description: Id do produto gerado pelo AnyMarket
          required: true
          schema:
            type: integer
            format: int64
            minimum: 1
      requestBody:
        content:
          application/json-patch+json:
            schema:
              type: object
              properties:
                '':
                  type: string
            examples: {}
        description: Dados do produto a ser alterado.
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json-patch+json:
              schema:
                $ref: '#/components/schemas/Product'
            application/xml:
              schema:
                type: object
                properties: {}
          headers: {}
        '400':
          description: Bad request
  '/products/{productId}/skus':
    get:
      tags:
        - SKU
      summary: Consulta todos os SKUs de um produto
      description: |
        Consulta todos os SKUs de um produto. Um produto no ANYMARKET possui no mínimo 1 (um) sku e no caso de variações pode possuir mais skus. Ex: o produto pode ser uma caneta e possuir mais de 1 (um) sku ( vairaçoes na cor azul, cor vermelha e cor preta. Mesmo que o produto não possuir variações (Ex: um relógio) ele possuirá um sku.
      parameters:
        - name: productId
          in: path
          description: Id do produto gerado pelo ANYMARKET
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Sku'
    post:
      tags:
        - SKU
      summary: Cria um SKU com os dados informados
      description: Cria um SKU com os dados informados
      parameters:
        - name: productId
          in: path
          description: Id do produto gerado pelo ANYMARKET
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SkuPost'
        description: Dados do SKU
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sku'
        '400':
          description: Bad request
  '/products/{productId}/skus/{skuId}':
    get:
      tags:
        - SKU
      summary: Consulta os detalhes de um SKU
      description: Consulta os detalhes de um SKU
      parameters:
        - name: productId
          in: path
          description: Id do produto gerado pelo ANYMARKET
          required: true
          schema:
            type: integer
            format: int64
        - name: skuId
          in: path
          description: Id do SKU
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sku'
        '404':
          description: Not found
    put:
      tags:
        - SKU
      summary: Atualiza os dados de um SKU
      description: Atualiza os dados de um SKU
      parameters:
        - name: productId
          in: path
          description: Id do produto gerado pelo ANYMARKET
          required: true
          schema:
            type: integer
            format: int64
        - name: skuId
          in: path
          description: Id do sku
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SkuPut'
        description: Dados do SKU
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sku'
        '400':
          description: Bad request
  /freight/quotes:
    post:
      tags:
        - Frete
      summary: Cotação de valores de frete
      description: Cotação de valores de frete para o objeto informado
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FreightRequest'
        description: Informações sobre a cotação de frete
        required: true
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FreightResponse'
        '400':
          description: Bad request
  '/products/{productId}/images':
    get:
      tags:
        - Imagem
      summary: Consulta todas as imagens de um produto
      description: Consulta todas os imagens de um produto
      parameters:
        - name: productId
          in: path
          description: Id do produto gerado pelo ANYMARKET
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Images'
    put:
      tags:
        - Imagem
      summary: Edita o index e/ou main da imagem informada.
      description: Caso o índice informado for maior que a quantidade de imagens do produto a operação será ignorada. Caso o índice informado seja o mesmo de outra imagem então os índices serão trocados. Caso a imagem seja alterada para main e já exista uma primeira imagem com a mesma marcação a primeira imagem deixará de ser a main.
      parameters:
        - name: productId
          in: path
          description: Id do produto gerado pelo ANYMARKET
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutImage'
        description: Dados da imagem
        required: true
      responses:
        '200':
          description: OK
    post:
      tags:
        - Imagem
      summary: Cria uma imagem com os dados informados
      description: 'Cria uma imagem com os dados informados. Caso informado um índice para a imagem o ANYMARKET manterá o índice, mantendo sempre o índice dentro da quantidade de imagens informadas para o produto. Caso não informado será atribuido em sequência iniciando-se em 1. Caso informado a imagem como main o ANYMARKET irá validar se não há outra imagem marcada como main.'
      parameters:
        - name: productId
          in: path
          description: Id do produto gerado pelo ANYMARKET
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostImage'
        description: Dados da imagem
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageResponse'
        '400':
          description: Bad request
  '/products/{productId}/images/{imageId}':
    get:
      tags:
        - Imagem
      summary: Consulta os detalhes de uma imagem
      description: Consulta os detalhes de uma imagem
      parameters:
        - name: productId
          in: path
          description: Id do produto gerado pelo ANYMARKET
          required: true
          schema:
            type: integer
            format: int64
        - name: imageId
          in: path
          description: Id da imagem gerado pelo ANYMARKET
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Image'
        '404':
          description: Not found
    delete:
      tags:
        - Imagem
      summary: Exclui a imagem informada
      description: Exclui a imagem informada
      parameters:
        - name: productId
          in: path
          description: Id do produto gerado pelo ANYMARKET
          required: true
          schema:
            type: integer
            format: int64
        - name: imageId
          in: path
          description: Id da imagem gerado pelo ANYMARKET
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: No content
        '400':
          description: Bad request
        '404':
          description: Not found
  /brands:
    get:
      tags:
        - Marca
      summary: Consulta todas as marcas
      description: Consulta todas as marcas
      parameters:
        - name: offset
          in: query
          description: Posição de início da paginação
          required: false
          schema:
            type: integer
            format: int64
        - name: limit
          in: query
          description: Número máximo de marcas
          required: false
          schema:
            type: integer
            format: int64
        - name: sort
          in: query
          description: Atributo para ordenação
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page_Brand_'
    post:
      tags:
        - Marca
      summary: Cria uma marca com os dados informados
      description: Cria uma marca com os dados informados
      requestBody:
        $ref: '#/components/requestBodies/PostBrand'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Brand'
        '400':
          description: Bad request
  '/brands/{id}':
    get:
      tags:
        - Marca
      summary: Consulta os detalhes de uma marca
      description: Consulta os detalhes de uma marca
      parameters:
        - name: id
          in: path
          description: Id da marca gerado pelo ANYMARKET
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Brand'
        '404':
          description: Not found
    put:
      tags:
        - Marca
      summary: Atualiza os dados de uma marca
      description: Atualiza os dados de uma marca
      parameters:
        - name: id
          in: path
          description: Id da marca gerado pelo ANYMARKET
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/PostBrand'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Brand'
        '400':
          description: Bad request
        '404':
          description: Not found
    delete:
      tags:
        - Marca
      summary: Exclui uma marca
      description: Exclui uma marca
      parameters:
        - name: id
          in: path
          description: Id da marca gerado pelo ANYMARKET
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: No content
        '400':
          description: Bad request
        '404':
          description: Not found
  /monitorings:
    post:
      tags:
        - Monitoramento
      summary: Cria um registro para monitoração
      description: Cria um registro para monitoração
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostMonitoring'
        description: Dados do evento monitorado
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Monitoring'
        '400':
          description: Bad request
  '/monitorings/{id}':
    put:
      tags:
        - Monitoramento
      summary: Atualiza os dados de um evento monitorado
      description: Atualiza os dados de um evento monitorado
      parameters:
        - name: id
          in: path
          description: Id do monitoramento gerado pelo ANYMARKET
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutMonitoring'
        description: Dados do monitoramento
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Monitoring'
        '400':
          description: Bad request
        '404':
          description: Not found
  /skus/marketplaces:
    get:
      tags:
        - SKU Marketplace
      summary: Consulta todos os anúncios de um SKU
      description: |
        Consulta todos os anúncios de um SKU. Um SKU pode possuir varios anúncios criados nos Marketplaces
      parameters:
        - name: partnerID
          in: query
          description: Código SKU do parceiro
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SkuMarketplace'
  '/skus/{skuId}/marketplaces':
    get:
      tags:
        - SKU Marketplace
      summary: Consulta todos os anúncios de um SKU
      description: |
        Consulta todos os anúncios de um SKU. Um SKU pode possuir varios anúncios criados nos Marketplaces
      parameters:
        - name: skuId
          in: path
          description: Id do SKU
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SkuMarketplace'
    post:
      tags:
        - SKU Marketplace
      summary: Cria um anúncio com os dados informados
      description: Cria um anúncio com os dados informados
      parameters:
        - name: skuId
          in: path
          description: Id do SKU
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostSkuMarketplace'
        description: Dados do anúncio
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SkuMarketplaceDetail'
        '400':
          description: Bad request
  '/skus/{skuId}/marketplaces/{id}':
    get:
      tags:
        - SKU Marketplace
      summary: Consulta os detalhes de um anúncio
      description: Consulta os detalhes de um anúncio
      parameters:
        - name: skuId
          in: path
          description: Id do SKU
          required: true
          schema:
            type: integer
            format: int64
        - name: id
          in: path
          description: Id do anúncio
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SkuMarketplaceById'
        '404':
          description: Not found
    put:
      tags:
        - SKU Marketplace
      summary: Atualiza os dados de um anúncio
      description: Atualiza os dados de um anúncio
      parameters:
        - name: skuId
          in: path
          description: Id do SKU
          required: true
          schema:
            type: integer
            format: int64
        - name: id
          in: path
          description: Id do anúncio
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutSkuMarketplace'
        description: Dados do anúncio
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SkuMarketplace'
        '400':
          description: Bad request
  '/skus/{skuId}/marketplaces/{id}/send':
    post:
      tags:
        - SKU Marketplace
      summary: Dispara o envio do anúncio para o marketplace.
      description: 'Para anúncios não publicados, inicia o processo de publicação. Para anúncios já ativos, envia a atualização do anúncio.'
      parameters:
        - name: skuId
          in: path
          description: Id do SKU
          required: true
          schema:
            type: integer
            format: int64
        - name: id
          in: path
          description: Id do anúncio
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: OK
        '404':
          description: Not found
        '500':
          description: Server error or logic error
  /skus/marketplaces/prices:
    put:
      tags:
        - SKU Marketplace
      summary: Atualiza Preço de e Preço por de uma lista de anúncios
      description: 'Atualiza as informações de Preço de (price) e Preço por (discountPrice) de uma lista de anúncios, realizando o cálculo de forma automática do valor de desconto e o markup adicional para cada anúncio.'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutSkuMarketplaceUpdatePricesResource'
        description: Lista de preços dos anúncios
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutSkuMarketplaceUpdatePricesResourceResponse'
        '422':
          description: Unprocessable Entity
  '/skus/{skuId}/updatePrice/{marketPlace}':
    post:
      tags:
        - SKU Marketplace
      summary: Atualiza Preço de e Preço por de uma lista de anúncios
      description: 'Atualiza as informações de Preço de (price) e Preço por (discountPrice) de uma lista de anúncios do marketplace, anúncios com calculo de preço automático não podem ser alterados por aqui.'
      parameters:
        - name: skuId
          in: path
          description: Id do SKU
          required: true
          schema:
            type: integer
            format: int64
        - name: marketPlace
          in: path
          required: true
          schema:
            type: string
            enum:
              - B2W
              - CNOVA
              - ECOMMERCE
              - MERCADO_LIVRE
              - WALMART
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SkuMarketplacePricePost'
            examples:
              example-1:
                value:
                  price: 0
                  discountPrice: 0
                  fields:
                    - key: string
                      value: string
          application/pdf:
            schema:
              type: object
              properties: {}
            examples:
              example-1:
                value:
                  teste: 34
        description: Lista de preços dos anúncios
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SkuMarketplaceUpdatePricesErrorResource'
        '207':
          description: teste
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SkuMarketplaceUpdatePricesErrorResource'
        '422':
          description: Unprocessable Entity
  /skus/exports:
    get:
      tags:
        - SKU
      summary: Busca lista de exports solicitados
      description: Faz a busca de todos os exports solicitados com base no usuario do token
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SkuFileExport'
        '422':
          description: Unprocessable Entity
    post:
      tags:
        - SKU
      summary: 'Gerar arquivo com a relação de produtos (sku, preço, estoque, prazo de crossdocking)'
      description: 'Gerar arquivo com a relação de produtos (sku, preço, estoque, prazo de crossdocking)'
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SkuFileExport'
        '422':
          description: Unprocessable Entity
  '/skus/exports/{idDocument}':
    get:
      tags:
        - SKU
      summary: Busca export por idDocumento
      description: Faz a busca de todos os exports solicitados com base no usuario do token e idDocument
      parameters:
        - name: idDocument
          in: path
          description: Id do documento exportado
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SkuFileExport'
        '422':
          description: Unprocessable Entity
  /template:
    post:
      tags:
        - Template
      summary: Cria um novo template
      description: Cria um novo template
      requestBody:
        $ref: '#/components/requestBodies/PostTemplate'
      responses:
        '201':
          description: CREATED
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Template'
        '422':
          description: Unprocessable Entity
  '/template/{marketPlace}/all':
    get:
      tags:
        - Template
      summary: Consulta todos os templates de um determinado MarketPlace
      description: Consulta todos os templates de um determinado MarketPlace
      parameters:
        - name: marketPlace
          in: path
          description: Id do marketPlace
          required: true
          schema:
            type: string
            enum:
              - B2W
              - CNOVA
              - ECOMMERCE
              - MERCADO_LIVRE
              - WALMART
              - GFG
              - NETSHOES
              - VTEX
              - BUSCAPE
              - AMAZON
        - name: offset
          in: query
          description: Posição de início da paginação
          required: false
          schema:
            type: integer
            format: int64
        - name: limit
          in: query
          description: Número máximo de templates
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page_Template_'
  '/template/{id}':
    get:
      tags:
        - Template
      summary: Consulta os detalhes de um Template
      description: Consulta os detalhes de um Template através do id.
      parameters:
        - name: id
          in: path
          description: Id do Template gerado pelo ANYMARKET
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Template'
        '404':
          description: Not found
    put:
      tags:
        - Template
      summary: Altera um template
      description: Altera um template
      parameters:
        - name: id
          in: path
          description: Id do Template gerado pelo ANYMARKET
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/PostTemplate'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Template'
        '422':
          description: Unprocessable Entity
    delete:
      tags:
        - Template
      summary: Exclui um template
      description: Exclui um template
      parameters:
        - name: id
          in: path
          description: Id do template gerado pelo ANYMARKET
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: No content
        '404':
          description: Not found
        '422':
          description: Unprocessable Entity
  /transmissions:
    get:
      tags:
        - Transmissão
      summary: Consulta todas as transmissões
      description: Consulta todas as transmissões para o ecommerce
      parameters:
        - name: offset
          in: query
          description: Posição de início da paginação
          required: false
          schema:
            type: integer
            format: int64
        - name: limit
          in: query
          description: Número máximo de transmissões
          required: false
          schema:
            type: integer
            format: int64
        - name: sort
          in: query
          description: Atributo para ordenação
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page_Transmission_'
  '/transmissions/marketplace/{marketplace}':
    get:
      tags:
        - Transmissões por marketplace
      summary: Consulta todas as transmissões de um determinado marketplace
      description: Consulta todas as transmissões para um determinado marketplace
      parameters:
        - name: marketplace
          in: path
          description: Marketplace a ser consultado
          required: true
          schema:
            type: string
            enum:
              - B2W
              - CNOVA
              - ECOMMERCE
              - MERCADO_LIVRE
              - WALMART;
        - name: offset
          in: query
          description: Posição de início da paginação
          required: false
          schema:
            type: integer
            format: int64
        - name: limit
          in: query
          description: Número máximo de transmissões
          required: false
          schema:
            type: integer
            format: int64
        - name: sort
          in: query
          description: Atributo para ordenação
          required: false
          schema:
            type: string
        - name: statusFilter
          in: query
          description: 'Lista de status a serem filtrados separados por virgula. Ex. statusFilter=UNPUBLISHED,ACTIVE,PAUSED,CLOSED,WITHOUT_STOCK'
          required: false
          schema:
            type: string
            enum:
              - ACTIVE
              - CLOSED
              - CORRUPTED
              - PAUSED
              - UNPUBLISHED
              - WITHOUT_STOCK
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page_Transmission_'
  '/transmissions/{id}':
    get:
      tags:
        - Transmissão
      summary: Consulta os detalhes de uma transmissão
      description: Consulta os detalhes de uma transmissão de ecommerce
      parameters:
        - name: id
          in: path
          description: Id do SKU gerado pelo ANYMARKET
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transmission'
        '404':
          description: Not found
    put:
      tags:
        - Transmissão
      summary: Atualiza os dados de uma transmissão
      description: Atualiza os dados de uma transmissão para ecommerce
      parameters:
        - name: id
          in: path
          description: Id do SKU gerado pelo ANYMARKET
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransmissionPut'
          application/xml:
            schema:
              type: object
              properties: {}
        description: Dados da transmissão
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transmission'
        '400':
          description: Bad request
        '404':
          description: Not found
  /variations:
    get:
      tags:
        - Tipos de variação
      summary: Consulta todos os tipos de variação
      description: Consulta todos os tipos de variação
      parameters:
        - name: offset
          in: query
          description: Posição de início da paginação
          required: false
          schema:
            type: integer
            format: int64
        - name: limit
          in: query
          description: Número máximo de tipos de variação
          required: false
          schema:
            type: integer
            format: int64
        - name: sort
          in: query
          description: Atributo para ordenação
          required: false
          schema:
            type: string
        - name: partnerId
          in: query
          description: Id do tipo de variação no parceiro
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page_VariationType_'
    post:
      tags:
        - Tipos de variação
      summary: Cria um tipo de variação com os dados informados
      description: Cria um tipo de variação com os dados informados
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VariationTypePost'
        description: Dados do tipo de variação
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VariationGet'
        '400':
          description: Bad request
  '/variations/{id}':
    get:
      tags:
        - Tipos de variação
      summary: Consulta os detalhes de um tipo de variação
      description: Consulta os detalhes de um tipo de variação
      parameters:
        - name: id
          in: path
          description: Id do tipo de variação gerado pelo ANYMARKET
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VariationGet'
        '404':
          description: Not found
    put:
      tags:
        - Tipos de variação
      summary: Atualiza os dados de um tipo de variação
      description: Atualiza os dados de um tipo de variação
      parameters:
        - name: id
          in: path
          description: Id do tipo de variação gerado pelo ANYMARKET
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VariationTypePut'
        description: Dados do tipo de variação
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VariationGet'
        '400':
          description: Bad request
        '404':
          description: Not found
    delete:
      tags:
        - Tipos de variação
      summary: Exclui um tipo de variação
      description: Exclui um tipo de variação
      parameters:
        - name: id
          in: path
          description: Id do tipo de variação gerado pelo ANYMARKET
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: No content
        '400':
          description: Bad request
        '404':
          description: Not found
  '/variations/{typeId}/values':
    get:
      tags:
        - Valores de variação
      summary: Consulta todas os valores de variação de um tipo
      description: Consulta todas os valores de variação de um tipo
      parameters:
        - name: typeId
          in: path
          description: Id do tipo de variação gerado pelo ANYMARKET
          required: true
          schema:
            type: integer
            format: int64
        - name: partnerId
          in: query
          description: Id do tipo de variação no parceiro
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page_VariationValue_'
    post:
      tags:
        - Valores de variação
      summary: Cria um valor de variação com os dados informados
      description: Cria um valor de variação com os dados informados
      parameters:
        - name: typeId
          in: path
          description: Id do tipo de variação gerado pelo ANYMARKET
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VariationValuePost'
        description: Dados da imagem
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VariationValueGet'
        '400':
          description: Bad request
  '/variations/{typeId}/values/{valueId}':
    get:
      tags:
        - Valores de variação
      summary: Consulta os detalhes de um valor de variação
      description: Consulta os detalhes de um valor de variação
      parameters:
        - name: typeId
          in: path
          description: Id do tipo de variação gerado pelo ANYMARKET
          required: true
          schema:
            type: integer
            format: int64
        - name: valueId
          in: path
          description: Id do valor de variação gerado pelo ANYMARKET
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VariationValueGet'
        '404':
          description: Not found
    put:
      tags:
        - Valores de variação
      summary: Atualiza os dados de um valor de variação
      description: Atualiza os dados de um valor de variação
      parameters:
        - name: typeId
          in: path
          description: Id do tipo de variação gerado pelo ANYMARKET
          required: true
          schema:
            type: integer
            format: int64
        - name: valueId
          in: path
          description: Id do valor de variação gerado pelo ANYMARKET
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VariationValuePut'
        description: Dados do valor de variação
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VariationValueGet'
        '400':
          description: Bad request
    delete:
      tags:
        - Valores de variação
      summary: Exclui ao valor de variação informado
      description: Exclui ao valor de variação informado
      parameters:
        - name: typeId
          in: path
          description: Id do tipo de variação gerado pelo ANYMARKET
          required: true
          schema:
            type: integer
            format: int64
        - name: valueId
          in: path
          description: Id do valor de variação gerado pelo ANYMARKET
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: No content
        '400':
          description: Bad request
        '404':
          description: Not found
  '/printtag/{type}':
    post:
      tags:
        - Emissão de Etiquetas
      summary: Gera etiquetas para os pedidos informados
      description: Gera etiquetas para os pedidos informados
      parameters:
        - name: type
          in: path
          description: 'Tipo da nota que sera gerada (PDF, ZPL2)'
          required: true
          schema:
            type: string
        - name: file
          in: query
          description: 'Pode ser informado "TXT" ou "PLP" quando o tipo for ZPL2. Quando informado TXT é retornado um JSON com o conteúdo do TXT fornecido pelo Marketplace, quando informado PLP o retorno é um PDF com o PLP.'
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrintTagPost'
        description: Dados dos Id´s das vendas
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrintTag'
        '400':
          description: Bad request
  '/messages/order/{id}':
    post:
      tags:
        - Mensageria
      summary: Encaminha para o Mercado Livre uma mensagem para o comprador do pedido
      description: |
        Encaminha para o marketplace uma mensagem para o comprador do pedido no Mercado Livre.
      parameters:
        - name: id
          in: path
          description: Id do pedido
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MessagesPost'
        description: Mensagem para o comprador
        required: true
      responses:
        '200':
          description: OK
        '400':
          description: Bad request
servers:
  - url: 'http://sandbox-api.anymarket.com.br/v2'
components:
  requestBodies:
    PostCategory:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PostCategory'
      description: Dados da categoria
      required: true
    PostCallback:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PostCallback'
      description: Dados do callback
      required: true
    StockLocalPost:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/StockLocalPost'
      description: Lista com dados de local de estoque
      required: true
    PostBrand:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PostBrand'
      description: Dados da marca
      required: true
    PostTemplate:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PostTemplate'
      description: Dados do template
      required: true
  schemas:
    PageMetadata:
      required:
        - size
        - totalElements
        - totalPages
        - number
      type: object
      properties:
        size:
          description: Tamanho da página
          type: integer
          format: int64
        totalElements:
          description: Total de elementos existentes
          type: integer
          format: int64
        totalPages:
          description: Total de páginas disponíveis
          type: integer
          format: int64
        number:
          description: Número da página atual
          type: integer
          format: int64
    PageLinks:
      required:
        - rel
        - href
      type: object
      properties:
        rel:
          description: Relacionamento do hyperlink
          type: string
        href:
          description: Url de definição do recurso
          type: string
    TransmissionPut:
      type: object
      properties:
        publicationStatus:
          type: string
          description: |
            Status de publicação no ANYMARKET



              **ACTIVE**: Transmissão ativa no marketplace

              **CLOSED**: Transmissão encerrada no marketplace

              **CORRUPTED**: Transmissão corrompida no envio ao marketplace

              **PAUSED**: Transmissão pausada no marketplace

              **UNPUBLISHED**: Transmissão não publicada no marketplace

              **WITHOUT_STOCK**: Transmissão sem estoque no ANYMARKET
        marketplaceStatus:
          type: string
          description: Status da transmissão no marketplace
          maxLength: 255
    TransmissionPost:
      type: object
      properties:
        publicationStatus:
          type: string
          description: |
            Status de publicação no ANYMARKET



              **ACTIVE**: Transmissão ativa no marketplace

              **CLOSED**: Transmissão encerrada no marketplace

              **CORRUPTED**: Transmissão corrompida no envio ao marketplace

              **PAUSED**: Transmissão pausada no marketplace

              **UNPUBLISHED**: Transmissão não publicada no marketplace

              **WITHOUT_STOCK**: Transmissão sem estoque no ANYMARKET
        marketplaceStatus:
          type: string
          description: Status da transmissão no marketplace
          maxLength: 255
        permalink:
          type: string
          description: Link da publicação no marketplace
          maxLength: 255
        marketPlaceCode:
          type: string
          description: Código da venda no marketplace
          maxLength: 255
    Template:
      required:
        - id
        - name
        - templateType
        - marketPlace
      allOf:
        - properties:
            id:
              type: integer
              description: Id do Template gerado automático pelo ANYMARKET
              format: int64
            name:
              type: string
              description: Identificador do template
            content:
              type: string
              description: Conteúdo do template caso o template seja do tipo HTML
            templateType:
              type: string
              description: Tipo do template
              enum:
                - HTML
                - PLAIN_TEXT
            plainTextContent:
              type: string
              description: Conteúdo do template caso o template seja do tipo PLAIN_TEXT
            includeDimensionAttributes:
              type: boolean
              description: Permite ou não a inclusão dos dados da embalagem na tabela de características
            manualImageSize:
              type: boolean
              description: Permite ou não definir o tamanho da imagem
            manualImgAttributes:
              type: string
              description: Atributos da imagem
            isActive:
              type: boolean
              description: O status do template
            removeDescriptionTableContent:
              type: boolean
              description: Remove ou não todo conteúdo descrito em tabelas HTML
            marketPlace:
              type: string
              description: Id do Marketplace
              enum:
                - B2W
                - CNOVA
                - ECOMMERCE
                - MERCADO_LIVRE
                - WALMART
                - GFG
                - NETSHOES
                - VTEX
                - BUSCAPE
                - AMAZON
    PostTemplate:
      required:
        - name
        - templateType
        - marketPlace
      allOf:
        - properties:
            name:
              type: string
              description: Identificador do template
            content:
              type: string
              description: Conteúdo do template caso o template seja do tipo HTML
            templateType:
              type: string
              description: Tipo do template
              enum:
                - HTML
                - PLAIN_TEXT
            plainTextContent:
              type: string
              description: Conteúdo do template caso o template seja do tipo PLAIN_TEXT
            includeDimensionAttributes:
              type: boolean
              description: Permite ou não a inclusão dos dados da embalagem na tabela de características
            manualImageSize:
              type: boolean
              description: Permite ou não definir o tamanho da imagem
            manualImgAttributes:
              type: string
              description: Atributos da imagem
            isActive:
              type: boolean
              description: O status do template
            removeDescriptionTableContent:
              type: boolean
              description: Remove ou não todo conteúdo descrito em tabelas HTML
            marketPlace:
              type: string
              description: Id do Marketplace
              enum:
                - B2W
                - CNOVA
                - ECOMMERCE
                - MERCADO_LIVRE
                - WALMART
                - GFG
                - NETSHOES
                - VTEX
                - BUSCAPE
                - AMAZON
    Transmission:
      required:
        - id
        - accountName
        - description
        - category
        - product
        - height
        - weight
        - width
        - length
        - status
        - publicationStatus
        - marketPlaceStatus
        - permalink
        - priceFactor
        - sku
        - images
      allOf:
        - properties:
            id:
              type: integer
              description: Id da Transmissão gerado automático pelo ANYMARKET
              format: int64
            accountName:
              type: string
              description: Identificador da conta do Marketplace
            description:
              type: string
              description: Descrição da transmissão enviada ao marketplace
            category:
              required:
                - id
                - name
                - path
              description: Categoria do produto. Posteriormente o cliente realizará o vinculo da categoria enviada com a categoria de cada marketplace
              type: object
              properties:
                id:
                  type: number
                  description: Id da categoria gerado pelo ANYMARKET
                name:
                  type: string
                  description: Nome da Categoria
                path:
                  type: string
                  description: Árvore de categorias até a categoria atual
            brand:
              required:
                - id
                - name
              type: object
              description: Marca do produto
              properties:
                id:
                  type: number
                  description: Id da Marca gerado automático pelo ANYMARKET
                name:
                  type: string
                  description: Nome da Marca
            product:
              $ref: '#/components/schemas/SimpleProduct'
            nbm:
              $ref: '#/components/schemas/Nbm'
            origin:
              $ref: '#/components/schemas/Origin'
            model:
              type: string
              description: Modelo do produto
            videoUrl:
              type: string
              description: URL do produto
            warrantyTime:
              type: integer
              description: Tempo da garantia
              format: int32
            warrantyText:
              type: string
              description: Texto sobre a garantia
            height:
              type: number
              description: Altura da embalagem do produto (em centímetros)
              format: double
            width:
              type: number
              description: Largura da embalagem do produto (em centímetros)
              format: double
            weight:
              type: number
              description: Peso da embalagem do produto (em quilos)
              format: double
            length:
              type: number
              description: Profundidade da embalagem do produto (em centímetros)
              format: double
            status:
              type: string
              description: |
                Status de transmissão



                  **ACTIVATING**: Ativando tranmissão mas na fila para processamento (Usado pelo ANYMARKET para indicar progresso)

                  **CLOSING**: Transmissão finalizada mas na fila para processamento (Usado pelo ANYMARKET para indicar progresso)

                  **ERROR**: Erro na publicação no marketplace

                  **OK**: Transmissão enviada com sucesso para o marketplace

                  **PAUSING**: Pausando tranmissão no marketplace

                  **SENDING**: Enviando ao marketplace mas não houve resposta de sucesso ainda

                  **SYNCING**: Sincronizando status do marketplace com o ANYMARKET

                  **WAITING_SYNC**: Ativado para o marketplace, mas não foi sincronizado com marketplace ainda
            transmissionMessage:
              type: string
              description: Campo para armazenar mensagem de retorno do parceiro para casos de problemas na transmissão.
            publicationStatus:
              type: string
              description: Status do anúncio no ANYMARKET
              enum:
                - ACTIVE
                - CLOSED
                - CORRUPTED
                - PAUSED
                - UNPUBLISHED
                - WITHOUT_STOCK
            marketPlaceStatus:
              type: string
              description: |
                Situação do pedido no marketplace. Cada marketplace possui situações diferentes. Ex: no mercado livre não existe a situação faturado
            priceFactor:
              type: number
              description: Markup da transmissão
              format: double
            sku:
              $ref: '#/components/schemas/TransmissionSku'
            characteristics:
              type: array
              description: |
                Define caracteristicas variaveis e específicas de cada produto. Por exemplo, no caso de uma raquete de tênis, a tensão da rede pode ser adicionada como caracteristica adicional.
              items:
                $ref: '#/components/schemas/ProductCharacteristic'
            images:
              type: array
              description: URL das imagens
              items:
                $ref: '#/components/schemas/Image'
    TransmissionSku:
      required:
        - id
        - title
        - price
        - amount
        - discountPrice
      type: object
      properties:
        id:
          type: integer
          description: Id do SKU gerado pelo ANYMARKET
          format: int64
        title:
          type: string
          description: Título do SKU
        partnerId:
          type: string
          description: Código do SKU no parceiro
        ean:
          type: string
          description: Código de barras
        price:
          type: number
          description: Preço do produto
          format: double
        amount:
          type: number
          description: Quantidade disponível
          format: double
        variations:
          type: array
          description: Valores de variação
          items:
            $ref: '#/components/schemas/VariationValue'
        discountPrice:
          type: number
          description: Preço do produto com desconto
          format: double
    CategoryID:
      required:
        - id
      type: object
      properties:
        id:
          type: integer
          description: Id da categoria gerado pelo ANYMARKET
          format: int64
    SimpleCategory:
      required:
        - id
        - name
      type: object
      properties:
        id:
          type: integer
          description: Id da categoria gerado pelo ANYMARKET
          format: int64
        name:
          type: string
          description: Nome da categoria
          maxLength: 80
    Category:
      type: object
      allOf:
        - $ref: '#/components/schemas/SimpleCategory'
        - properties:
            partnerId:
              type: string
              description: Id da categoria no parceiro
              maxLength: 80
            priceFactor:
              type: number
              format: double
              description: Fator de preço
            definitionPriceScope:
              type: string
              description: 'SKU (Manual, eu controlo o preço pelo SKU), SKU_MARKETPLACE (Manual, eu controlo o preço pelo anúncio) ou COST (Automático, pela mudança do custo)'
    PostCategory:
      type: object
      required:
        - name
        - definitionPriceScope
      properties:
        name:
          type: string
          description: Nome da categoria
          maxLength: 80
        partnerId:
          type: string
          description: Id da categoria no parceiro
          maxLength: 80
        parent:
          $ref: '#/components/schemas/CategoryID'
        priceFactor:
          type: number
          description: |
            Markup sugerido: Esse markup será sugerido ao ser cadastrado um produto na tela do ANYMARKET.

            _Observação: Caso o produto seja enviado pela API o ANYMARKET considera o markup enviado pela API._
          format: double
        calculatedPrice:
          type: boolean
          description: |
            Markup sugerido: Esse preço calculado será sugerido ao ser cadastrado um produto na tela do ANYMARKET.

            _Observação: Caso o produto seja enviado pela API o ANYMARKET considera o valor enviado pela API._
        definitionPriceScope:
          type: string
          description: 'Suporte aos tipos SKU (Manual, eu controlo o preço pelo SKU), SKU_MARKETPLACE (Manual, eu controlo o preço pelo anúncio) ou COST (Automático, pela mudança do custo)'
    CategoryDetail:
      type: object
      allOf:
        - $ref: '#/components/schemas/Category'
        - properties:
            parent:
              $ref: '#/components/schemas/CategoryID'
    CategoryResponse:
      required:
        - definitionPriceScope
      type: object
      allOf:
        - $ref: '#/components/schemas/SimpleCategory'
        - properties:
            parent:
              $ref: '#/components/schemas/CategoryID'
            partnerId:
              type: string
              description: Id da categoria no parceiro
              maxLength: 80
            priceFactor:
              type: number
              format: double
              description: Fator de preço
            children:
              $ref: '#/components/schemas/CategoryChildren'
            definitionPriceScope:
              type: string
              description: 'Suporte aos tipos SKU (Manual, eu controlo o preço pelo SKU), SKU_MARKETPLACE (Manual, eu controlo o preço pelo anúncio) ou COST (Automático, pela mudança do custo)'
    CategoryFullPath:
      required:
        - id
        - name
      type: object
      allOf:
        - properties:
            id:
              type: integer
              description: Id da categoria gerado pelo ANYMARKET
              format: int64
            name:
              type: string
              description: Nome da categoria
              maxLength: 80
            partnerId:
              type: string
              description: Id da categoria no parceiro
              maxLength: 80
            priceFactor:
              type: number
              format: double
              description: Fator de preço
            children:
              type: array
              items:
                $ref: '#/components/schemas/CategoryChildrenFullPath'
    CategoryChildrenFullPath:
      required:
        - id
        - name
      type: object
      properties:
        id:
          type: integer
          description: Id da categoria filha
          format: int64
        name:
          type: string
          description: Nome da categoria filha
        parent:
          $ref: '#/components/schemas/CategoryID'
        partnerId:
          type: string
          description: Id da categoria no parceiro
          maxLength: 80
        priceFactor:
          type: number
          format: double
          description: Fator de preço
        children:
          type: array
          items:
            required:
              - id
              - name
            type: object
            properties:
              id:
                type: integer
                description: Id da categoria filha
                format: int64
              name:
                type: string
                description: Nome da categoria filha
              parent:
                $ref: '#/components/schemas/CategoryID'
              partnerId:
                type: string
                description: Id da categoria no parceiro
                maxLength: 80
              priceFactor:
                type: number
                format: double
                description: Fator de preço
    CategoryChildren:
      required:
        - id
        - name
        - definitionPriceScope
      type: object
      properties:
        id:
          type: integer
          description: Id da categoria filha
          format: int64
        name:
          type: string
          description: Nome da categoria filha
        partnerId:
          type: string
          description: Id da categoria no parceiro
          maxLength: 80
        priceFactor:
          type: number
          format: double
          description: Fator de preço
        definitionPriceScope:
          type: string
          description: 'Suporte aos tipos SKU (Manual, eu controlo o preço pelo SKU), SKU_MARKETPLACE (Manual, eu controlo o preço pelo anúncio) ou COST (Automático, pela mudança do custo)'
    PrintTag:
      type: object
      allOf:
        - properties:
            content:
              type: string
              description: 'Conteúdo presente no TXT do ZPL2, disponível apenas no modo ZPL2 com o parâmetro TXT.'
    Callback:
      type: object
      allOf:
        - properties:
            id:
              type: integer
              description: Id do callback gerado pelo ANYMARKET
              format: int64
            url:
              type: string
              description: URL do callback
              maxLength: 255
            token:
              type: string
              description: Token do cliente utilizando a API
            orderActive:
              type: boolean
              description: Indica se o ANYMARKET deve encaminhar callback de pedido
            productActive:
              type: boolean
              description: Indica se o ANYMARKET deve encaminhar callback de produto
            transmissionActive:
              type: boolean
              description: Indica se o ANYMARKET deve encaminhar callback de transmissão
            questionActive:
              type: boolean
              description: Indica se o ANYMARKET deve encaminhar callback de pergunta
    PostCallback:
      type: object
      required:
        - url
      allOf:
        - properties:
            url:
              type: string
              description: URL do callback
              maxLength: 255
            orderActive:
              type: boolean
              description: Indica se o ANYMARKET deve encaminhar callback de pedido
            productActive:
              type: boolean
              description: Indica se o ANYMARKET deve encaminhar callback de produto
            transmissionActive:
              type: boolean
              description: Indica se o ANYMARKET deve encaminhar callback de transmissão
            questionActive:
              type: boolean
              description: Indica se o ANYMARKET deve encaminhar callback de pergunta
    BrandID:
      type: object
      properties:
        id:
          type: integer
          description: Id da marca gerado pelo ANYMARKET
          format: int64
    SimpleBrand:
      required:
        - id
        - name
      type: object
      properties:
        id:
          type: integer
          description: Id da marca gerado pelo ANYMARKET
          format: int64
        name:
          type: string
          description: Nome da marca
          maxLength: 80
        reducedName:
          type: string
          description: Nome reduzido da marca
          maxLength: 30
        partnerId:
          type: string
          description: Id da Marca no parceiro
    Brand:
      type: object
      allOf:
        - $ref: '#/components/schemas/SimpleBrand'
    PostBrand:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          description: Nome da marca
          maxLength: 80
        reducedName:
          type: string
          description: Nome reduzido da marca
          maxLength: 30
        partnerId:
          type: string
          description: Id da marca no parceiro
          maxLength: 80
    PostMonitoring:
      required:
        - origin
        - message
        - type
        - status
        - createdAt
      type: object
      properties:
        partnerId:
          type: string
          description: Id do monitoramento
          maxLength: 255
        origin:
          type: string
          description: Nome do integrador
          maxLength: 255
        message:
          type: string
          description: Resumo da mensagem de erro
          maxLength: 255
        details:
          type: string
          description: Detalhes da mensagem de erro
          maxLength: 255
        type:
          type: string
          description: 'Tipo de monitoramento (ALERT, CRITICAL_ERROR)'
          maxLength: 10
        retryCallbackURL:
          type: string
          description: Url da API do integrador
          maxLength: 255
        status:
          type: string
          description: 'Tipo de satus do monitoramento (PENDING, RETRYING, CANCELLED, CONCLUDED)'
          maxLength: 10
        createdAt:
          type: string
          description: Data de entrada do registro
          format: date-time
    PutMonitoring:
      type: object
      properties:
        message:
          type: string
          description: Resumo da mensagem de erro
          maxLength: 255
        details:
          type: string
          description: Detalhes da mensagem de erro
          maxLength: 255
        status:
          type: string
          description: 'Tipo de satus do monitoramento (PENDING, RETRYING, CANCELLED, CONCLUDED)'
          maxLength: 10
        createdAt:
          type: string
          description: Data de entrada do registro
          format: date-time
    Monitoring:
      required:
        - id
        - origin
        - message
        - type
        - status
        - createdAt
      type: object
      properties:
        id:
          type: integer
          description: Id do monitoramento
          format: int64
        partnerId:
          type: string
          description: Id do monitoramento
          maxLength: 255
        origin:
          type: string
          description: Nome do integrador
          maxLength: 255
        message:
          type: string
          description: Resumo da mensagem de erro
          maxLength: 255
        details:
          type: string
          description: Detalhes da mensagem de erro
          maxLength: 255
        createdAt:
          type: string
          description: Data de entrada do registro
          format: date-time
        type:
          type: string
          description: 'Tipo de monitoramento (ERROR, WARN)'
          maxLength: 10
        retryCallbackURL:
          type: string
          description: Url da API do integrador
          maxLength: 255
        status:
          type: string
          description: 'Tipo de satus do monitoramento (PENDING, RETRYING, CANCELLED, CONCLUDED)'
          maxLength: 10
    StockUpdate:
      type: object
      required:
        - id
        - quantity
        - cost
      properties:
        id:
          type: integer
          description: Id do SKU gerado pelo ANYMARKET
          format: int64
        partnerId:
          type: string
          description: Código do SKU do parceiro
          format: int64
        quantity:
          type: number
          description: Quantidade a ser atualizada
          format: double
        cost:
          type: number
          description: Custo médio do SKU no estoque. A partir desse custo será calculado o preço final do produto caso o tipo do cálculo de preço esteja como atutomático.
          format: double
        additionalTime:
          type: number
          description: 'Prazo Adicional para entrega do produto. Também chamado de ''crossdocking'' este é o prazo de preparo de cada produto para envio, seja de fabricação, aquisição, embalagem ou redirecionamento de local. Utilizado em marketplaces como B2W e CNOVA. Caso não informado, manterá o valor atual.'
          format: int64
        stockLocalId:
          type: integer
          description: Id do Local de Estoque
          format: int64
    OrderFeedPost:
      type: object
      required:
        - token
      properties:
        token:
          type: string
          description: |
            Token recuperado na consulta do feed
          format: int64
    OrderFeed:
      required:
        - id
        - token
      type: object
      properties:
        id:
          type: integer
          description: Id do pedido gerado pelo ANYMARKET
          format: int64
        token:
          type: string
          description: Token do feed
    ProductFeedPost:
      type: object
      required:
        - token
      properties:
        token:
          type: string
          description: |
            Token recuperado na consulta do feed
          format: int64
    ProductFeed:
      required:
        - id
        - token
      type: object
      properties:
        id:
          type: integer
          description: Id do produto gerado pelo ANYMARKET
          format: int64
        token:
          type: string
          description: Token do feed
    TransmissionFeedPost:
      type: object
      required:
        - token
      properties:
        token:
          type: string
          description: |
            Token recuperado na consulta do feed
    TransmissionFeed:
      type: object
      properties:
        id:
          type: integer
          description: Id do SKU gerado pelo ANYMARKET
          format: int64
        token:
          type: string
          description: Token do feed
    Order:
      required:
        - id
        - accountName
        - marketPlaceId
        - marketPlaceNumber
        - marketPlace
        - createdAt
        - transmissionStatus
        - status
        - marketPlaceStatus
        - discount
        - freight
        - interestValue
        - gross
        - total
        - deliverStatus
        - idAccount
        - buyer
        - payments
        - items
        - shipping
        - anymarketAddress
      type: object
      properties:
        id:
          type: integer
          description: Id do pedido gerado pelo ANYMARKET
          format: int64
        accountName:
          type: string
          description: Identificador da conta do Marketplace
        marketPlaceId:
          type: string
          description: Id interno do pedido no marketplace
        marketPlaceNumber:
          type: string
          description: Id público do pedido no marketplace
        partnerId:
          type: string
          description: 'Código do pedido no parceiro. Uma vez informado, não poderá ser alterado'
        marketPlace:
          type: string
          description: Descritivo de qual marketplace o pedido pertence
        subChannel:
          type: string
          description: Site onde foi realizado o pedido (conforme recebido pelo marketplace. Pode ser nulo caso o marketplace não possua subcanal)
        subChannelNormalized:
          type: string
          description: Site onde foi realizado o pedido (normalizado pelo ANYMARKET. Pode ser nulo)
        createdAt:
          type: string
          description: Data de criação do pedido
          format: date-time
        paymentDate:
          type: string
          description: Data de pagamento do pedido
          format: date-time
        cancelDate:
          type: string
          description: Data de cancelamento do pedido
          format: date-time
        shippingOptionId:
          type: string
          description: Id do Envio de cada Marketplace
        transmissionStatus:
          type: string
          description: |
            Status da transmissão



              **OK**: Pedido sincronizado com sucesso com o Marketplace

              **ERROR**: Ocorreu erro na sincronização com o Marketplace

              **WAITING**: Aguardando sincronização com o Marketplace
        status:
          type: string
          description: |
            Status do pedido



              **CONCLUDED**: Pedido entregue (é a última situação do pedido). Mudando para essa situação é necessário informar: data de entrega

              **CANCELED**: Cancelado

              **INVOICED**: Faturado. Mudando para essa situação é necessário informar: número da nota, número de série, data de emissão e chave de acesso

              **PAID_WAITING_DELIVERY**: Enviado (aguardando entrega). Mudando para essa situação é necessário informar: URL de rastreamento, número de rastreio, nome da transportadora, data de envio

              **PAID_WAITING_SHIP**: Pago (está aguardando envio)

              **PENDING**: Pendente (Ainda não foi pago. Existe parâmetro para que o ANYMARKET importe do MarketPlace o pedido que ainda não foi pago)
        marketPlaceStatus:
          type: string
          description: |
            Situação do pedido no marketplace. Cada marketplace possui situações diferentes. Ex: no mercado livre não existe a situação faturado
        marketplaceStatusComplement:
          type: string
          description: |
            Informação complementar à situação do pedido no marketplace. Cada marketplace possui situações diferentes. Ex: na Dafiti o pedido pode ser marcado como falha de entrega e a causa pode ser armazenada nesse atributo
        documentIntermediator:
          type: string
          description: Identificador de intermediador da Transação CNPJ
        intermediateRegistrationId:
          type: string
          description: Identificador  do cadastro (vendedor ou usuário)  no intermediador
        documentPaymentInstitution:
          type: string
          description: Identificador de Instituição de pagamento CNPJ
        fulfillment:
          type: boolean
          description: Identifica se o pedido é fulfillment
        discount:
          type: number
          description: Desconto do pedido
          format: double
        freight:
          type: number
          description: Valor de frete
          format: double
        interestValue:
          type: number
          description: Valor dos juros
          format: double
        gross:
          type: number
          description: Total bruto sem o valor de frete
          format: double
        total:
          type: number
          description: Total do pedido com o valor de frete
          format: double
        marketPlaceUrl:
          type: string
          description: URL do pedido no marketplace
        marketPlaceShipmentStatus:
          type: string
          description: Situação de envio do pedido no marketplace. Cada marketplace possui situações diferentes
        invoice:
          $ref: '#/components/schemas/OrderInvoice'
        shipping:
          $ref: '#/components/schemas/OrderShippingAddressGet'
        billingAddress:
          $ref: '#/components/schemas/OrderBillingAddressGet'
        anymarketAddress:
          $ref: '#/components/schemas/OrderAnymarketAddress'
        buyer:
          $ref: '#/components/schemas/BuyerGet'
        payments:
          description: Dados referente a pagamento (Será enviado pelo Marketplace)
          type: array
          items:
            $ref: '#/components/schemas/OrderPaymentGet'
        items:
          description: Dados referente aos produtos comprados
          type: array
          items:
            $ref: '#/components/schemas/OrderShippingItemGet'
        tracking:
          $ref: '#/components/schemas/OrderTracking'
        deliverStatus:
          type: string
          description: |
            Status do pedido



              **UNKNOWN**: Envio pendente

              **SHIPPED**: Pedido Enviado
              **CONCLUDED**: Pedido entregue
        idAccount:
          description: Id da conta gerado automático pelo ANYMARKET
          type: number
        pickup:
          $ref: '#/components/schemas/PickUp'
        metadata:
          $ref: '#/components/schemas/OrderMetadata'
    PostOrder:
      type: object
      required:
        - marketPlaceId
        - marketPlaceNumber
        - marketPlace
        - transmissionStatus
        - marketPlaceStatus
        - createdAt
        - status
        - total
        - buyer
        - items
      properties:
        marketPlaceId:
          type: string
          description: Id do pedido no marketplace
        marketPlaceNumber:
          type: string
          description: Id público do pedido no marketplace
        marketPlace:
          type: string
          description: Id do Marketplace
          enum:
            - B2W
            - CNOVA
            - ECOMMERCE
            - MERCADO_LIVRE
            - WALMART
            - GFG
            - NETSHOES
            - VTEX
            - BUSCAPE
            - AMAZON
        accountName:
          type: string
          description: Identificador da conta do Marketplace
        partnerId:
          type: string
          description: 'Código do pedido no parceiro. Uma vez informado, não poderá ser alterado'
        idAccount:
          description: Id da conta gerado automático pelo ANYMARKET
          type: number
        fulfillment:
          type: boolean
          description: Identifica se o pedido é fulfillment
        createdAt:
          type: string
          description: Data de criação do pedido
          format: date-time
        paymentDate:
          type: string
          description: Data de pagamento do pedido
          format: date-time
        transmissionStatus:
          type: string
          description: |
            Status da transmissão



              **OK**: Pedido sincronizado com sucesso com o Marketplace

              **ERROR**: Ocorreu erro na sincronização com o Marketplace

              **WAITING**: Aguardando sincronização com o Marketplace
        status:
          type: string
          description: |
            Status do pedido



              **INVOICED**: Faturado. Mudando para essa situação é necessário informar: número da nota, número de série, data de emissão e chave de acesso

              **PAID_WAITING_DELIVERY**: Enviado (aguardando entrega). Mudando para essa situação é necessário informar: URL de rastreamento, número de rastreio, nome da transportadora, data de envio

              **PAID_WAITING_SHIP**: Pago (está aguardando envio)

              **PENDING**: Pendente (Ainda não foi pago. Existe parâmetro para que o ANYMARKET importe do MarketPlace o pedido que ainda não foi pago)
        marketPlaceStatus:
          type: string
          description: |
            Situação do pedido no marketplace. Cada marketplace possui situações diferentes. Ex: no mercado livre não existe a situação faturado
        marketplaceStatusComplement:
          type: string
          description: |
            Informação complementar à situação do pedido no marketplace. Cada marketplace possui situações diferentes. Ex: na Dafiti o pedido pode ser marcado como falha de entrega e a causa pode ser armazenada nesse atributo
        documentIntermediator:
          type: string
          description: Identificador de intermediador da Transação CNPJ
        intermediateRegistrationId:
          type: string
          description: Identificador  do cadastro (vendedor ou usuário)  no intermediador
        documentPaymentInstitution:
          type: string
          description: Identificador de Instituição de pagamento CNPJ
        discount:
          type: number
          description: Desconto do pedido
          format: double
        freight:
          type: number
          description: Valor de frete
          format: double
        interestValue:
          type: number
          description: Valor dos juros
          format: double
        gross:
          type: number
          description: Total bruto sem o valor de frete
          format: double
        total:
          type: number
          description: Total do pedido com o valor de frete
          format: double
        marketPlaceUrl:
          type: string
          description: URL do pedido no marketplace
        marketPlaceShipmentStatus:
          type: string
          description: Situação de envio do pedido no marketplace. Cada marketplace possui situações diferentes
        shipping:
          $ref: '#/components/schemas/OrderShippingAddressPost'
        billingAddress:
          $ref: '#/components/schemas/OrderBillingAddressPost'
        anymarketAddress:
          $ref: '#/components/schemas/OrderAnymarketAddress'
        buyer:
          $ref: '#/components/schemas/BuyerPost'
        payments:
          description: Dados referente a pagamento (Será enviado pelo Marketplace)
          type: array
          items:
            $ref: '#/components/schemas/OrderPaymentPost'
        items:
          description: Dados referente aos produtos comprados
          type: array
          items:
            $ref: '#/components/schemas/OrderShippingItemPost'
        deliverStatus:
          type: string
          description: |
            Status do pedido



              **UNKNOWN**: Envio pendente

              **SHIPPED**: Pedido Enviado
              **CONCLUDED**: Pedido entregue
    OrderUpdate:
      type: object
      properties:
        status:
          type: string
          description: |
            Status do pedido



              **CONCLUDED**: Pedido entregue (é a última situação do pedido). Mudando para essa situação é necessário informar: data de entrega

              **CANCELED**: Cancelado

              **INVOICED**: Faturado. Mudando para essa situação é necessário informar: número da nota, número de série, data de emissão e chave de acesso

              **PAID_WAITING_DELIVERY**: : Enviado (aguardando entrega). Mudando para essa situação é necessário informar: URL de rastreamento, número de rastreio, nome da transportadora e data de envio

              **PAID_WAITING_SHIP**: Pago (está aguardando envio)

              **PENDING**: Pendente (Ainda não foi pago. Existe parâmetro para que o ANYMARKET importe do MarketPlace o pedido que ainda não foi pago)



              É importante observar a transição possível de status conforme abaixo:



              **CONCLUDED**: PENDING, PAID_WAITING_SHIP, INVOICED, PAID_WAITING_DELIVERY

              **CANCELED**: PENDING, PAID_WAITING_SHIP, INVOICED, PAID_WAITING_DELIVERY, CONCLUDED

              **INVOICED**: PENDING, PAID_WAITING_SHIP

              **PAID_WAITING_DELIVERY**: PENDING, PAID_WAITING_SHIP, INVOICED

              **PAID_WAITING_SHIP**: PENDING

              **PENDING**: Sem transição possível
        shipping:
          $ref: '#/components/schemas/OrderShippingAddressPost'
        billingAddress:
          $ref: '#/components/schemas/OrderBillingAddressPost'
        invoice:
          $ref: '#/components/schemas/OrderInvoice'
        tracking:
          $ref: '#/components/schemas/OrderTracking'
    OrderUpdatePaid:
      type: object
      properties:
        status:
          type: string
          description: |
            Status do pedido


              **PAID_WAITING_SHIP**: : Pago (está aguardando envio)
      required:
        - status
    OrderUpdateInvoiced:
      type: object
      properties:
        status:
          type: string
          description: |
            Status do pedido


              **INVOICED**: Faturado. Mudando para essa situação é necessário informar: número da nota, número de série, data de emissão e chave de acesso
        invoice:
          $ref: '#/components/schemas/OrderInvoice'
        metadata:
          $ref: '#/components/schemas/OrderMetadata'
      required:
        - status
        - invoice
    OrderUpdateDelivery:
      type: object
      properties:
        status:
          type: string
          description: |
            Status do pedido


              **PAID_WAITING_DELIVERY**: : Enviado (aguardando entrega). Mudando para essa situação é necessário informar: URL de rastreamento, número de rastreio, nome da transportadora e data de envio
        tracking:
          $ref: '#/components/schemas/OrderTrackingDelivery'
      required:
        - status
        - tracking
    OrderUpdateConcluded:
      required:
        - status
        - tracking
      type: object
      properties:
        status:
          type: string
          description: |
            Status do pedido


              **CONCLUDED**: Pedido entregue (é a última situação do pedido). Mudando para essa situação é necessário informar: data de entrega
        tracking:
          $ref: '#/components/schemas/OrderTrackingConcluded'
    OrderUpdateCanceled:
      required:
        - status
      type: object
      properties:
        cancelDetails:
          type: string
          description: |
            Detalhes do cancelamento, obrigatório para os Marketplaces:


              GFG - Dafiti
        status:
          type: string
          description: |
            Status do pedido


              **CANCELED**: Pedido Cancelado
    OrderShippingAddressPost:
      required:
        - city
        - state
        - address
        - number
        - neighborhood
        - country
        - street
        - zipCode
        - receiverName
        - promisedShippingTime
      type: object
      properties:
        city:
          type: string
          description: Cidade
        state:
          type: string
          description: Estado
        stateNameNormalized:
          type: string
          description: Nome do Estado padronizado internamente pelo ANYMARKET. Pode ser nulo se o state for nulo ou UNKNOWN para desconhecido.
        address:
          type: string
          description: Endereço
        number:
          type: string
          description: Número
        neighborhood:
          type: string
          description: Bairro
        country:
          type: string
          description: País
        street:
          type: string
          description: Rua
        comment:
          type: string
          description: Complemento
        reference:
          type: string
          description: Referência
        zipCode:
          type: string
          description: CEP
        receiverName:
          type: string
          description: Nome do remetente para entrega
        promisedShippingTime:
          type: string
          description: Data acordada para entrega
          format: date-time
    OrderAnymarketAddress:
      required:
        - country
        - state
        - city
        - zipCode
        - neighborhood
        - address
        - street
        - receiverName
        - number
        - promisedShippingTime
      type: object
      properties:
        state:
          type: string
          description: 'Sigla do Estado padronizado internamente pelo ANYMARKET. Pode ser nulo se o state for nulo ou o valor enviado pelo Marketplace, se ele for desconhecido.'
        city:
          type: string
          description: Cidade
        zipCode:
          type: string
          description: CEP
        neighborhood:
          type: string
          description: Bairro
        address:
          type: string
          description: Endereço
        street:
          type: string
          description: Rua
        number:
          type: string
          description: Número
        comment:
          type: string
          description: Complemento
        reference:
          type: string
          description: Referência
        receiverName:
          type: string
          description: Nome do remetente para entrega
        promisedShippingTime:
          type: string
          description: Data estimada de entrega
    OrderShippingAddressGet:
      required:
        - city
        - state
        - stateNameNormalized
        - country
        - countryAcronymNormalized
        - countryNameNormalized
        - address
        - neighborhood
        - street
        - number
        - zipCode
        - receiverName
        - promisedShippingTime
      type: object
      properties:
        city:
          type: string
          description: Cidade
        state:
          type: string
          description: 'Sigla do Estado padronizado internamente pelo ANYMARKET. Pode ser nulo se o state for nulo ou o valor enviado pelo Marketplace, se ele for desconhecido.'
        stateNameNormalized:
          type: string
          description: Nome do Estado padronizado internamente pelo ANYMARKET. Pode ser nulo se o state for nulo ou UNKNOWN para desconhecido.
        country:
          type: string
          description: 'País (Campo original, cadastrado pelo Marketplace ou Ecommerce)'
        countryAcronymNormalized:
          type: string
          description: Sigla do País padronizado internamente pelo ANYMARKET. Pode ser nulo se o country for nulo ou desconhecido.
        countryNameNormalized:
          type: string
          description: Nome do País padronizado internamente pelo ANYMARKET. Pode ser nulo se o country for nulo ou UNKNOWN para desconhecido.
        address:
          type: string
          description: Endereço
        number:
          type: string
          description: Número
        neighborhood:
          type: string
          description: Bairro
        street:
          type: string
          description: Rua
        comment:
          type: string
          description: Complemento
        reference:
          type: string
          description: Referência
        zipCode:
          type: string
          description: CEP
        receiverName:
          type: string
          description: Nome do remetente para entrega
        promisedShippingTime:
          type: string
          description: Data acordada para entrega
          format: date-time
    OrderBillingAddressPost:
      required:
        - city
        - state
        - street
        - number
        - neighborhood
        - zipCode
      type: object
      properties:
        city:
          type: string
          description: Cidade
        state:
          type: string
          description: Estado
        stateNameNormalized:
          type: string
          description: Nome do Estado padronizado internamente pelo ANYMARKET. Pode ser nulo se o state for nulo ou UNKNOWN para desconhecido.
        country:
          type: string
          description: País
        street:
          type: string
          description: Rua
        number:
          type: string
          description: Número
        neighborhood:
          type: string
          description: Bairro
        comment:
          type: string
          description: Complemento
        reference:
          type: string
          description: Referência
        zipCode:
          type: string
          description: CEP
    OrderBillingAddressGet:
      required:
        - city
        - state
        - stateNameNormalized
        - country
        - countryAcronymNormalized
        - countryNameNormalized
        - street
        - number
        - neighborhood
        - zipCode
      type: object
      properties:
        city:
          type: string
          description: Cidade
        state:
          type: string
          description: 'Sigla do Estado padronizado internamente pelo ANYMARKET. Pode ser nulo se o state for nulo ou o valor enviado pelo Marketplace, se ele for desconhecido.'
        stateNameNormalized:
          type: string
          description: Nome do Estado padronizado internamente pelo ANYMARKET. Pode ser nulo se o state for nulo ou UNKNOWN para desconhecido.
        country:
          type: string
          description: 'País (Campo original, cadastrado pelo Marketplace ou Ecommerce)'
        countryAcronymNormalized:
          type: string
          description: Sigla do País padronizado internamente pelo ANYMARKET. Pode ser nulo se o country for nulo ou desconhecido.
        countryNameNormalized:
          type: string
          description: Nome do País padronizado internamente pelo ANYMARKET. Pode ser nulo se o country for nulo ou UNKNOWN para desconhecido.
        street:
          type: string
          description: Rua
        number:
          type: string
          description: Número
        neighborhood:
          type: string
          description: Bairro
        comment:
          type: string
          description: Complemento
        reference:
          type: string
          description: Referência
        zipCode:
          type: string
          description: CEP
    OrderTracking:
      required:
        - carrier
        - estimateDate
        - shippedDate
      type: object
      properties:
        url:
          type: string
          description: URL para o rastreamento
        number:
          type: string
          description: Número de rastreio
        carrier:
          type: string
          description: Nome da transportadora
        carrierDocument:
          type: string
          description: CNPJ da transportadora
        date:
          type: string
          description: Data do rastreio (Necessário informar o fuso horario)
          format: date-time
        deliveredDate:
          type: string
          description: Data de entrega ao Cliente (Necessário informar o fuso horario)
          format: date-time
        estimateDate:
          type: string
          description: Data estimada (Necessário informar o fuso horario)
          format: date-time
        shippedDate:
          type: string
          description: Data em que foi entregue a transportadora (Necessário informar o fuso horario)
          format: date-time
    OrderTrackingDelivery:
      required:
        - carrier
        - carrierDocument
        - estimateDate
        - shippedDate
      type: object
      properties:
        url:
          type: string
          description: URL para o rastreamento
        number:
          type: string
          description: Número de rastreio
        carrier:
          type: string
          description: Nome da transportadora
        carrierDocument:
          type: string
          description: CNPJ da transportadora
        estimateDate:
          type: string
          description: Data estimada (Necessário informar o fuso horario)
          format: date-time
        shippedDate:
          type: string
          description: Data em que foi entregue a transportadora (Necessário informar o fuso horario)
          format: date-time
    OrderTrackingConcluded:
      required:
        - deliveredDate
      type: object
      properties:
        deliveredDate:
          type: string
          description: Data de entrega ao Cliente (Necessário informar o fuso horario)
          format: date-time
    BuyerPost:
      required:
        - name
        - email
        - document
        - documentType
        - phone
      type: object
      properties:
        marketPlaceId:
          type: string
          description: Id no marketplace. Essa informação pode não existir para algum marketplace ou ecommerce.
        name:
          type: string
          description: Nome do comprador
        documentType:
          type: string
          description: |
            Tipo do documento. Valores possíveis: CPF, CNPJ, OTHER
        document:
          type: string
          description: Número do documento. Essa informação pode não ser preenchida para algum marketplace ou ecommerce.
        email:
          type: string
          description: E-mail do comprador
        phone:
          type: string
          description: Telefone do comprador
        cellPhone:
          type: string
          description: Celular do comprador
        documentNumberNormalized:
          type: string
          description: Número do documento normalizado pelo ANYMARKET. Somente números. Caso o document não seja um CPF ou CNPJ este campo irá retornar nulo.
    BuyerGet:
      required:
        - name
        - email
        - phone
        - document
        - documentType
      type: object
      properties:
        marketPlaceId:
          type: string
          description: Id no marketplace. Essa informação pode não existir para algum marketplace ou ecommerce.
        name:
          type: string
          description: Nome do comprador
        email:
          type: string
          description: E-mail do comprador
        document:
          type: string
          description: Número do documento. Essa informação pode não ser preenchida para algum marketplace ou ecommerce.
        documentType:
          type: string
          description: |
            Tipo do documento. Valores possíveis: CPF, CNPJ, OTHER
        phone:
          type: string
          description: Telefone do comprador
        cellPhone:
          type: string
          description: Celular do comprador
        documentNumberNormalized:
          type: string
          description: Número do documento normalizado pelo ANYMARKET. Somente números. Caso o document não seja um CPF ou CNPJ este campo irá retornar nulo.
    OrderItem:
      type: object
      properties:
        sku:
          $ref: '#/components/schemas/SimpleSku'
        product:
          $ref: '#/components/schemas/SimpleProduct'
        amount:
          type: number
          description: Quantidade do item
          format: double
        unit:
          type: number
          description: Preço do item
          format: double
        discount:
          type: number
          description: Desconto do item
          format: double
        gross:
          type: number
          description: Valor bruto do item (amount * unit)
          format: double
        total:
          type: number
          description: Total do item com desconto aplicado (gross - discount)
          format: double
        marketPlaceId:
          type: string
          description: 'Id do item no marketplace / plataforma de e-commerce (Caso não informado, será o mesmo do sku)'
    OrderShippingItemPost:
      required:
        - sku
        - product
        - amount
        - unit
        - gross
        - total
      type: object
      properties:
        sku:
          description: Informações da SKU
          type: object
          properties:
            title:
              type: string
              description: Titulo da SKU no MarketPlace
            partnerId:
              type: string
              description: Código do SKU no parceiro
        product:
          description: Informações do produto
          type: object
          properties:
            title:
              type: string
              description: Titulo da SKU no MarketPlace
        amount:
          type: number
          description: Quantidade do item
          format: double
        unit:
          type: number
          description: Unidade de medida
          format: double
        discount:
          type: number
          description: Desconto do item
          format: double
        gross:
          type: number
          description: Valor bruto com desconto
          format: double
        total:
          type: number
          description: Total do item sem desconto
          format: double
        marketPlaceId:
          type: string
          description: 'Id do item no marketplace / plataforma de e-commerce (Caso não informado, será o mesmo do sku)'
        shippings:
          type: array
          items:
            $ref: '#/components/schemas/OrderItemShippingPost'
    OrderShippingItemGet:
      required:
        - product
        - sku
        - amount
        - unit
        - gross
        - total
        - discount
        - orderItemId
        - idInMarketPlace
      type: object
      properties:
        product:
          $ref: '#/components/schemas/SimpleProduct'
        sku:
          $ref: '#/components/schemas/SimpleSku'
        amount:
          type: number
          description: Quantidade do item
          format: double
        unit:
          type: number
          description: Preço do item
          format: double
        gross:
          type: number
          description: Valor bruto do item (amount * unit)
          format: double
        total:
          type: number
          description: Total do item com desconto aplicado (gross - discount)
          format: double
        discount:
          type: number
          description: Desconto do item
          format: double
        shippings:
          type: array
          items:
            $ref: '#/components/schemas/OrderItemShippingGet'
        stocks:
          type: array
          items:
            $ref: '#/components/schemas/OrderItemStockGet'
        marketPlaceId:
          type: string
          description: 'Id do item no marketplace / plataforma de e-commerce (Caso não informado, será o mesmo do sku)'
        orderItemId:
          type: string
          description: Id do item no pedido gerado pelo ANYMARKET
        idInMarketPlace:
          type: string
          description: Código do sku no marketplace
        officialStoreId:
          type: string
          description: Id da loja oficial (Mercado Livre)
          readOnly: true
        officialStoreName:
          type: string
          description: Descrição da loja oficial (Mercado Livre)
          readOnly: true
        listingType:
          type: string
          description: Tipo de listagem do anúncio do item vendido (Mercado Livre)
          readOnly: true
    OrderPaymentPost:
      required:
        - method
        - value
        - installments
        - marketPlaceId
      type: object
      properties:
        method:
          type: string
          description: Método de pagamento
        status:
          type: string
          description: Status do pagamento enviado pelo marketplace
        value:
          type: number
          description: |
            Valor do pagamento (Em caso de cobrança de juros, o valor é adicionado ao total da compra. Ex: Mercado livre)
          format: double
        installments:
          type: number
          description: Número de parcelas do meio do pagamento. Deve-se dividir o número de parcelas pelo valor para encontrar o valor de cada parcela.
          format: int64
        marketplaceId:
          type: string
          description: 'Id do pagamento enviado pelo marketplace. Alguns marketplaces não disponibilizam o id, podendo o valor estar nulo ou com um valor fixo "1" dependendo da regra. (Exemplo- Cnova sempre tem apenas um pagamento para a compra, então o id do pagamento pode ser sempre "1")'
        gatewayFee:
          type: number
          description: |
            Taxa referente ao gateway de pagamento (Ex: MercadoPago).
          format: double
        marketplaceFee:
          type: number
          description: |
            Taxa referente ao Marketplace.
          format: double
        paymentMethodNormalized:
          type: string
          description: 'Método de pagamento padronizado internamente pelo ANYMARKET. Caso for um valor desconhecido internamente irá retornar UNKNOWN. Se o method for nulo, este campo também será nulo.'
        paymentDetailNormalized:
          type: string
          description: 'Detalhamento do método de pagamento padronizado internamente pelo ANYMARKET. Caso for um valor desconhecido internamente irá retornar UNKNOWN. Se o method for nulo, este campo também será nulo.'
    OrderPaymentGet:
      required:
        - method
        - value
      type: object
      properties:
        method:
          type: string
          description: 'Método de pagamento. (Campo original, enviado pelo Marketplace ou Ecommerce)'
        status:
          type: string
          description: Status do pagamento enviado pelo marketplace
        value:
          type: number
          description: |
            Valor do pagamento (Em caso de cobrança de juros, o valor é adicionado ao total da compra. Ex: Mercado livre)
          format: double
        installments:
          type: number
          description: Número de parcelas do meio do pagamento. Deve-se dividir o número de parcelas pelo valor para encontrar o valor de cada parcela.
          format: int64
        marketplaceId:
          type: string
          description: 'Id do pagamento enviado pelo marketplace. Alguns marketplaces não disponibilizam o id, podendo o valor estar nulo ou com um valor fixo "1" dependendo da regra. (Exemplo- Cnova sempre tem apenas um pagamento para a compra, então o id do pagamento pode ser sempre "1")'
        gatewayFee:
          type: number
          description: |
            Taxa referente ao gateway de pagamento (Ex: MercadoPago).
          format: double
        marketplaceFee:
          type: number
          description: |
            Taxa referente ao Marketplace.
          format: double
        paymentMethodNormalized:
          type: string
          description: 'Método de pagamento padronizado internamente pelo ANYMARKET. Caso for um valor desconhecido internamente irá retornar UNKNOWN. Se o method for nulo, este campo também será nulo.'
        paymentDetailNormalized:
          type: string
          description: 'Detalhamento do método de pagamento padronizado internamente pelo ANYMARKET. Caso for um valor desconhecido internamente irá retornar UNKNOWN. Se o method for nulo, este campo também será nulo.'
    OrderInvoice:
      type: object
      required:
        - accessKey
        - date
      properties:
        accessKey:
          type: string
          description: Chave de acesso da nota fiscal
        series:
          type: string
          description: Número de série da nota fiscal
        number:
          type: string
          description: Número da nota fiscal
        date:
          type: string
          description: Data de emissão da nota fiscal (Necessário informar o fuso horario)
          format: date-time
        cfop:
          type: string
          description: 'Código Fiscal de Operações e Prestações, esse campo será obrigátorio caso seja utilizado ''Mercado Envio Coleta'''
        companyStateTaxId:
          type: string
          description: 'Inscrição Estadual quando o comprador é uma Pessoa Jurídica (CNPJ), esse campo será obrigátorio caso seja utilizado ''Mercado Envios Coleta''; é possível utilizar ''ISENTO'''
        linkNfe:
          type: string
          description: Campo para inserir a URL para consulta da nota fiscal
        invoiceLink:
          type: string
          description: Campo para inserir a URL onde está armazenada o PDF ou o XML da nota fiscal (utilizado para a integração da Garbarino)
        extraDescription:
          type: string
          description: Campo para observações
    OrderItemShippingPost:
      type: object
      required:
        - id
        - shippingtype
      properties:
        shippingtype:
          type: string
          description: Forma de envio selecionado pelo cliente
        shippingCarrierNormalized:
          type: string
          description: 'Nome da transportadora padronizado internamente pelo ANYMARKET. Caso for um valor desconhecido internamente irá retornar UNKNOWN. Se o shippingType for nulo, este campo também será nulo.'
        shippingCarrierTypeNormalized:
          type: string
          description: 'Serviço da transportadora padronizado internamente pelo ANYMARKET. Caso for um valor desconhecido internamente irá retornar UNKNOWN. Se o shippingType for nulo, este campo também será nulo.'
    OrderItemShippingGet:
      type: object
      required:
        - id
        - shippingtype
      properties:
        id:
          type: integer
          description: Id do tipo de envio
          format: int64
        shippingtype:
          type: string
          description: 'Forma de envio selecionado pelo cliente (Campo original, cadastrado pelo Marketplace ou Ecommerce)'
        shippingCarrierNormalized:
          type: string
          description: 'Nome da transportadora padronizado internamente pelo ANYMARKET. Caso for um valor desconhecido internamente irá retornar UNKNOWN. Se o shippingType for nulo, este campo também será nulo.'
        shippingCarrierTypeNormalized:
          type: string
          description: 'Serviço da transportadora padronizado internamente pelo ANYMARKET. Caso for um valor desconhecido internamente irá retornar UNKNOWN. Se o shippingType for nulo, este campo também será nulo.'
    OrderMetadata:
      type: object
      description: Campos adicionais do pedido.
      properties:
        number-of-packages:
          type: string
          default: '1'
          description: Quantidade de volumes para a impressão de etiqueta (B2W Nova Api)
        dcZipCode:
          type: string
          description: CEP do Centro de Distribuição referente ao CNPJ de faturamento do pedido
    PickUp:
      type: object
      properties:
        id:
          type: integer
          description: Id da loja no ANYMARKET
        description:
          type: string
          description: Nome da loja
        partnerId:
          type: integer
          description: Código da loja no parceiro
        marketplaceId:
          type: string
          description: Id da loja no marketplace
        receiverName:
          type: string
          description: Nome de quem retira o pedido na loja
    FreightRequest:
      type: object
      required:
        - marketPlace
        - zipCode
      properties:
        marketPlace:
          type: string
          description: Marketplace onde será realizada a consulta
        zipCode:
          type: string
          description: 'CEP do destinatário do frete, com ou sem hífen'
        additionalPercentual:
          type: number
          description: Percentual a adicionar ao valor de frete
        timeout:
          type: integer
          description: 'Timeout, em milissegundos, para a consulta'
        products:
          $ref: '#/components/schemas/FreightProducts'
    FreightResponse:
      required:
        - marketPlace
        - zipCode
        - quotes
      type: object
      properties:
        marketPlace:
          type: string
          description: Marketplace onde foi realizada a consulta
        zipCode:
          type: string
          description: CEP do destinatário do frete sem hífen
        products:
          $ref: '#/components/schemas/FreightResponseProducts'
        quotes:
          $ref: '#/components/schemas/FreightQuotes'
        defaultFreight:
          $ref: '#/components/schemas/FreightQuote'
        missingSkus:
          type: object
          description: Mapa com as SKUs não encontradas
          additionalProperties:
            type: number
            description: Quantidade pesquisada
    FreightProducts:
      type: array
      items:
        $ref: '#/components/schemas/FreightProduct'
    FreightQuotes:
      type: array
      items:
        $ref: '#/components/schemas/FreightQuote'
    FreightResponseProducts:
      type: array
      items:
        $ref: '#/components/schemas/FreightResponseProduct'
    FreightProduct:
      type: object
      required:
        - skuId
        - amount
        - dimensions
      properties:
        skuId:
          type: string
          description: Código do item no marketplace
        amount:
          type: integer
          description: Quantidade do item
        dimensions:
          $ref: '#/components/schemas/FreightDimension'
    FreightResponseProduct:
      required:
        - skuId
        - amount
        - stockAmount
        - price
        - discountPrice
      type: object
      properties:
        skuId:
          type: string
          description: Código do item no marketplace
        amount:
          type: integer
          description: Quantidade do item
        dimensions:
          $ref: '#/components/schemas/FreightDimension'
        stockAmount:
          type: number
          description: Quantidade em estoque
        additionalDeliveryTime:
          type: integer
          description: Prazo adicional em dias para este produto
        price:
          type: number
          description: Preço normal do produto
        discountPrice:
          type: number
          description: Preço do produto com desconto
    FreightDimension:
      required:
        - height
        - width
        - weight
        - length
      type: object
      properties:
        height:
          type: number
          description: Altura do objeto
        width:
          type: number
          description: Largura do objeto
        weight:
          type: number
          description: Peso do objeto
        length:
          type: number
          description: Comprimento do objeto
    FreightQuote:
      required:
        - carrierName
        - serviceName
        - deliveryTime
        - freightType
        - price
      type: object
      properties:
        carrierName:
          type: string
          description: Nome da empresa de transporte
        serviceName:
          type: string
          description: Nome do serviço de transporte
        deliveryTime:
          type: integer
          description: Prazo de entrega em dias
        freightType:
          type: string
          description: Tipo do frete (NORMAL/EXPRESS)
        price:
          type: number
          description: Valor do frete
    Images:
      type: array
      items:
        $ref: '#/components/schemas/Image'
    Image:
      required:
        - id
        - url
        - status
      type: object
      properties:
        id:
          type: integer
          description: Id da imagem gerado pelo ANYMARKET
          format: int64
        index:
          type: integer
          description: 'Índice da imagem, ou seja, posição da imagem no cadastro no produto; inicia-se em 1 e limita-se a quantidade de imagens no produto'
          format: int32
        main:
          type: boolean
          description: Determina se a imagem é principal
        url:
          type: string
          description: URL original da imagem
        thumbnailUrl:
          type: string
          description: URL da imagem miniatura
        lowResolutionUrl:
          type: string
          description: URL da imagem de baixa resolução
        standardUrl:
          type: string
          description: URL padrão da imagem
        originalImage:
          type: string
          description: URL da imagem original com suas dimensões originais
        variation:
          type: string
          description: Indica a qual variaçao a imagem pertence
        status:
          type: string
          description: |
            Determina qual é o status da imagem




              **UNPROCESSED**: Indica que a imagem ainda não foi processada

              **PROCESSED**: Indica que a imagem foi processada com sucesso

              **ERROR**: Indica quando houve algum tipo de erro com a imagem
        statusMessage:
          type: string
          description: Preenchida quando ocorre algum erro no processamento da imagem
        standardWidth:
          type: integer
          description: Dimensão padrão de largura da imagem
        standardHeight:
          type: integer
          description: Dimensão padrão de altura da imagem
        originalWidth:
          type: integer
          description: Dimensão original de largura da imagem
        originalHeight:
          type: integer
          description: Dimensão original de altura da imagem
    ImageResponse:
      required:
        - id
        - url
        - status
      type: object
      properties:
        id:
          type: integer
          description: Id da imagem gerado pelo ANYMARKET
          format: int64
        index:
          type: integer
          description: 'Índice da imagem, ou seja, posição da imagem no cadastro no produto; inicia-se em 1 e limita-se a quantidade de imagens no produto'
          format: int32
        main:
          type: boolean
          description: Determina se a imagem é principal
        url:
          type: string
          description: URL original da imagem
        status:
          type: string
          description: |
            Determina qual é o status da imagem




              **UNPROCESSED**: Indica que a imagem ainda não foi processada

              **PROCESSED**: Indica que a imagem foi processada com sucesso

              **ERROR**: Indica quando houve algum tipo de erro com a imagem
    PostImage:
      type: object
      required:
        - url
      properties:
        index:
          type: integer
          description: 'Índice da imagem, ou seja, posição da imagem no cadastro no produto; inicia-se em 1 e limita-se a quantidade de imagens no produto'
          format: int32
        main:
          type: boolean
          description: Determina se a imagem é principal
        url:
          type: string
          description: URL original da imagem
        variation:
          type: string
          description: Indica a qual variaçao a imagem pertence
    PutImage:
      type: object
      required:
        - id
        - url
      properties:
        id:
          type: integer
          description: Id da imagem vínculada no produto no ANYMARKET
          format: int64
        index:
          type: integer
          description: 'Índice da imagem, ou seja, posição da imagem que será atualizada no cadastro do produto; inicia-se em 1 e limita-se a quantidade de imagens no produto'
          format: int32
        main:
          type: boolean
          description: Determina se a imagem é principal
        url:
          type: string
          description: URL original da imagem
    QuestionsResponse:
      required:
        - links
        - page
      type: object
      properties:
        links:
          description: Referências de paginação
          type: array
          items:
            $ref: '#/components/schemas/PageLinks'
        content:
          description: Lista de perguntas
          type: array
          items:
            $ref: '#/components/schemas/Questions'
        page:
          $ref: '#/components/schemas/PageMetadata'
    Questions:
      required:
        - id
        - questionerName
        - context
        - question
        - answers
        - questionDate
      type: object
      properties:
        id:
          type: integer
          description: Id da pergunta gerado pelo ANYMARKET
          format: int64
        questionerName:
          type: string
          description: Nome do questionador
        context:
          type: string
          description: Id da Transmissão concatenado com o nome do Produto
        question:
          type: string
          description: Pergunta
        answers:
          type: array
          description: Respostas
          items:
            $ref: '#/components/schemas/Answers'
        questionDate:
          type: string
          description: Data da Pergunta
          format: date-time
    AnswersResponse:
      required:
        - links
        - page
      type: object
      properties:
        links:
          description: Referências de paginação
          type: array
          items:
            $ref: '#/components/schemas/PageLinks'
        content:
          description: Lista de perguntas
          type: array
          items:
            $ref: '#/components/schemas/Answers'
        page:
          $ref: '#/components/schemas/PageMetadata'
    Answers:
      required:
        - id
        - answer
      type: object
      properties:
        id:
          type: integer
          description: Id da resposta gerado pelo ANYMARKET
          format: int64
        answer:
          type: string
          description: Resposta
    AnswerPost:
      required:
        - answer
      type: object
      properties:
        answer:
          type: string
          description: Resposta
    SimpleProduct:
      required:
        - id
        - title
      type: object
      properties:
        id:
          type: integer
          description: Id do produto gerado pelo ANYMARKET
          format: int64
        title:
          type: string
          description: Título do produto
          maxLength: 150
    Product:
      required:
        - id
        - title
        - description
        - category
        - ngm
        - origin
        - model
        - warrantyTime
        - height
        - width
        - weight
        - length
        - priceFactor
        - calculatedPrice
        - definitionPriceScope
        - hasVariations
        - images
        - skus
        - allowAutomaticSkuMarketplaceCreation
      type: object
      properties:
        id:
          type: integer
          description: Id do produto gerado pelo ANYMARKET
          format: int64
        title:
          type: string
          description: Título do produto
          maxLength: 150
        description:
          type: string
          description: Descrição do produto
          maxLength: 10000
        category:
          required:
            - id
            - name
            - path
          description: Categoria do produto. Posteriormente o cliente realizará o vinculo da categoria enviada com a categoria de cada marketplace
          type: object
          properties:
            id:
              type: number
              description: Id da categoria gerado pelo ANYMARKET
            name:
              type: string
              description: Nome da Categoria
            path:
              type: string
              description: Árvore de categorias até a categoria atual
        brand:
          $ref: '#/components/schemas/SimpleBrand'
        nbm:
          $ref: '#/components/schemas/Nbm'
        origin:
          $ref: '#/components/schemas/Origin'
        model:
          type: string
          description: Modelo do produto
        videoUrl:
          type: string
          description: URL do video do Youtube
          maxLength: 255
        gender:
          type: string
          description: 'Gênero do produto. Os valores são MALE, FEMALE, BOY, GIRL e UNISSEX'
        warrantyTime:
          type: integer
          description: Tempo da garantia
          format: int32
        warrantyText:
          type: string
          description: Texto sobre a garantia
        height:
          type: number
          description: Altura da embalagem do produto (em centímetros)
          format: double
        width:
          type: number
          description: Largura da embalagem do produto (em centímetros)
          format: double
        weight:
          type: number
          description: Peso da embalagem do produto (em quilos)
          format: double
        length:
          type: number
          description: Profundidade da embalagem do produto (em centímetros)
          format: double
        priceFactor:
          type: number
          description: Fator de preço do produto. É utilizado como um Multiplicador para o preço de custo do produto. Corresponde ao campo Markup na tela do sistema
          format: double
        calculatedPrice:
          type: boolean
          description: Identifica se o produto terá o preço calculado baseado no markup
        definitionPriceScope:
          type: string
          description: 'Suporte aos tipos SKU (Manual, eu controlo o preço pelo SKU), SKU_MARKETPLACE (Manual, eu controlo o preço pelo anúncio) ou COST (Automático, pela mudança do custo)'
        hasVariations:
          type: boolean
          description: Informa se o produt possui variações
        isProductActive:
          type: boolean
          description: Informa se o produto está Ativo/Inativo
        characteristics:
          type: array
          description: |
            Define caracteristicas variaveis e específicas de cada produto. Por exemplo, no caso de uma raquete de tênis, a tensão da rede pode ser adicionada como caracteristica adicional.
          items:
            $ref: '#/components/schemas/ProductCharacteristic'
        images:
          type: array
          description: 'Arrays das imagens. Os índices se informados serão mantidos, caso alguma imagem não tenha o índice informado o ANYMARKET irá preencher de forma sequencial e sem repetição. Caso nenhuma imagem seja marcada como main o ANYMARKET irá marcar a imagem de índice 1 como main'
          items:
            $ref: '#/components/schemas/Image'
        skus:
          type: array
          items:
            $ref: '#/components/schemas/Sku'
        allowAutomaticSkuMarketplaceCreation:
          type: boolean
          description: Permite a criação de anúncios automáticos baseado na configuração existente na categoria (Valor padrão do campo é true).
    ProductPost:
      type: object
      required:
        - title
        - category
        - description
        - priceFactor
      properties:
        title:
          type: string
          description: Título do produto
          maxLength: 150
        description:
          type: string
          description: Descrição do produto
          maxLength: 10000
        category:
          required:
            - id
            - name
            - path
          description: Categoria do produto. Posteriormente o cliente realizará o vinculo da categoria enviada com a categoria de cada marketplace
          type: object
          properties:
            id:
              type: number
              description: Id da categoria gerado pelo ANYMARKET
            name:
              type: string
              description: Nome da Categoria
            path:
              type: string
              description: Árvore de categorias até a categoria atual
        brand:
          $ref: '#/components/schemas/ProductBrand'
        nbm:
          $ref: '#/components/schemas/NbmID'
        origin:
          $ref: '#/components/schemas/OriginID'
        model:
          type: string
          description: Modelo do produto
        videoUrl:
          type: string
          description: URL do video do Youtube
          maxLength: 255
        gender:
          type: string
          description: 'Gênero do produto. Os valores são MALE, FEMALE, BOY, GIRL e UNISSEX'
        warrantyTime:
          type: integer
          description: Tempo da garantia
          format: int32
        warrantyText:
          type: string
          description: Texto sobre a garantia
        height:
          type: number
          description: Altura da embalagem do produto (em centímetros)
          format: double
        width:
          type: number
          description: Largura da embalagem do produto (em centímetros)
          format: double
        weight:
          type: number
          description: Peso do produto (em quilos)
          format: double
        length:
          type: number
          description: Profundidade da embalagem do produto (em centímetros)
          format: double
        priceFactor:
          type: number
          description: Fator de preço do produto. É utilizado como um Multiplicador para o preço de custo do produto. Corresponde ao campo Markup na tela do sistema
          format: double
        calculatedPrice:
          type: boolean
          description: Identifica se o produto terá o preço calculado baseado no markup
        definitionPriceScope:
          type: string
          description: 'Suporte aos tipos SKU (Manual, eu controlo o preço pelo SKU), SKU_MARKETPLACE (Manual, eu controlo o preço pelo anúncio) ou COST (Automático, pela mudança do custo)'
        characteristics:
          type: array
          description: |
            Define caracteristicas variaveis e específicas de cada produto. Por exemplo, no caso de uma raquete de tênis, a tensão da rede pode ser adicionada como caracteristica adicional.
          items:
            $ref: '#/components/schemas/ProductCharacteristic'
        images:
          type: array
          description: 'Arrays das imagens. Os índices se informados serão mantidos, caso alguma imagem não tenha o índice informado o ANYMARKET irá preencher de forma sequencial e sem repetição. Caso nenhuma imagem seja marcada como main o ANYMARKET irá marcar a imagem de índice 1 como main'
          items:
            type: object
            properties:
              index:
                type: integer
                format: int32
                description: 'Índice da imagem, ou seja, posição da imagem no cadastro no produto; inicia-se em 1 e limita-se a quantidade de imagens no produto'
              main:
                type: boolean
                description: Informe se a imagem é a principal
              url:
                type: string
                description: Informe a URL da Imagem
              variation:
                type: string
                description: Nome da variação no ANYMARKET
        skus:
          type: array
          items:
            $ref: '#/components/schemas/SkuPost'
        allowAutomaticSkuMarketplaceCreation:
          type: boolean
          description: Permite a criação de anúncios automáticos baseado na configuração existente na categoria (Valor padrão do campo é true).
    ProductUpdate:
      type: object
      required:
        - title
        - category
        - description
        - priceFactor
      properties:
        title:
          type: string
          description: Título do produto
          maxLength: 150
        description:
          type: string
          description: Descrição do produto
          maxLength: 10000
        category:
          required:
            - id
            - name
            - path
          description: Categoria do produto. Posteriormente o cliente realizará o vinculo da categoria enviada com a categoria de cada marketplace
          type: object
          properties:
            id:
              type: number
              description: Id da categoria gerado pelo ANYMARKET
            name:
              type: string
              description: Nome da Categoria
            path:
              type: string
              description: Árvore de categorias até a categoria atual
        brand:
          $ref: '#/components/schemas/ProductBrand'
        nbm:
          $ref: '#/components/schemas/NbmID'
        origin:
          $ref: '#/components/schemas/OriginID'
        model:
          type: string
          description: Modelo do produto
        videoUrl:
          type: string
          description: URL do video do Youtube
          maxLength: 255
        gender:
          type: string
          description: 'Gênero do produto. Os valores são MALE, FEMALE, BOY, GIRL e UNISSEX'
        warrantyTime:
          type: integer
          description: Tempo da garantia
          format: int32
        warrantyText:
          type: string
          description: Texto sobre a garantia
        height:
          type: number
          description: Altura da embalagem do produto (em centímetros)
          format: double
        width:
          type: number
          description: Largura da embalagem do produto (em centímetros)
          format: double
        weight:
          type: number
          description: Peso do produto (em quilos)
          format: double
        length:
          type: number
          description: Profundidade da embalagem do produto (em centímetros)
          format: double
        priceFactor:
          type: number
          description: Fator de preço do produto. É utilizado como um Multiplicador para o preço de custo do produto. Corresponde ao campo Markup na tela do sistema
          format: double
        calculatedPrice:
          type: boolean
          description: Identifica se o produto terá o preço calculado baseado no markup
        definitionPriceScope:
          type: string
          description: 'Suporte aos tipos SKU (Manual, eu controlo o preço pelo SKU), SKU_MARKETPLACE (Manual, eu controlo o preço pelo anúncio) ou COST (Automático, pela mudança do custo)'
        characteristics:
          type: array
          description: |
            Define caracteristicas variaveis e específicas de cada produto. Por exemplo, no caso de uma raquete de tênis, a tensão da rede pode ser adicionada como caracteristica adicional.
          items:
            $ref: '#/components/schemas/ProductCharacteristic'
        images:
          type: array
          description: URL das imagens
          items:
            type: object
            properties:
              main:
                type: boolean
                description: Informe se a imagem é a principal
              url:
                type: string
                description: Informe a URL da Imagem
              variation:
                type: string
                description: Nome da variação no ANYMARKET
        skus:
          type: array
          items:
            $ref: '#/components/schemas/SkuUpdate'
        allowAutomaticSkuMarketplaceCreation:
          type: boolean
          description: Permite a criação de anúncios automáticos baseado na configuração existente na categoria (Valor padrão do campo é true).
    ProductMergePatch:
      type: object
      example:
        title: replace
        description: Título do produto
        maxLength: 150
      properties:
        title:
          type: string
          description: Título do produto
          maxLength: 150
        description:
          type: string
          description: Descrição do produto
          maxLength: 10000
        category:
          required:
            - id
            - name
            - path
          description: Categoria do produto. Posteriormente o cliente realizará o vinculo da categoria enviada com a categoria de cada marketplace
          type: object
          properties:
            id:
              type: number
              description: Id da categoria gerado pelo AnyMarket
            name:
              type: string
              description: Nome da Categoria
            path:
              type: string
              description: Árvore de categorias até a categoria atual
        brand:
          $ref: '#/components/schemas/ProductBrand'
        nbm:
          $ref: '#/components/schemas/NbmID'
        origin:
          $ref: '#/components/schemas/OriginID'
        model:
          type: string
          description: Modelo do produto
        videoUrl:
          type: string
          description: URL do video do Youtube
          maxLength: 255
        gender:
          type: string
          description: 'Gênero do produto. Os valores são MALE, FEMALE, BOY, GIRL e UNISSEX'
        warrantyTime:
          type: integer
          description: Tempo da garantia
          format: int32
        warrantyText:
          type: string
          description: Texto sobre a garantia
        height:
          type: number
          description: Altura da embalagem do produto (em centímetros)
          format: double
        width:
          type: number
          description: Largura da embalagem do produto (em centímetros)
          format: double
        weight:
          type: number
          description: Peso do produto (em quilos)
          format: double
        length:
          type: number
          description: Profundidade da embalagem do produto (em centímetros)
          format: double
        priceFactor:
          type: number
          description: Fator de preço do produto. É utilizado como um Multiplicador para o preço de custo do produto. Corresponde ao campo Markup na tela do sistema
          format: double
        calculatedPrice:
          type: boolean
          description: Identifica se o produto terá o preço calculado baseado no markup
        definitionPriceScope:
          type: string
          description: 'Suporte aos tipos SKU (Manual, eu controlo o preço pelo SKU), SKU_MARKETPLACE (Manual, eu controlo o preço pelo anúncio) ou COST (Automático, pela mudança do custo)'
        characteristics:
          type: array
          description: |
            Define caracteristicas variaveis e específicas de cada produto. Por exemplo, no caso de uma raquete de tênis, a tensão da rede pode ser adicionada como caracteristica adicional.
          items:
            $ref: '#/components/schemas/ProductCharacteristic'
        images:
          type: array
          description: URL das imagens
          items:
            type: object
            properties:
              main:
                type: boolean
                description: Informe se a imagem é a principal
              url:
                type: string
                description: Informe a URL da Imagem
              variation:
                type: string
                description: Nome da variação no AnyMarket
        skus:
          type: array
          items:
            $ref: '#/components/schemas/SkuUpdate'
        allowAutomaticSkuMarketplaceCreation:
          type: boolean
          description: Permite a criação de anúncios automáticos baseado na configuração existente na categoria (Valor padrão do campo é true).
    ProductPatch:
      type: array
      description: Nova Operação
      example:
        - op: replace
          patch: /title
          value: novo título
        - op: replace
          patch: /warrantyTime
          value: 2
        - op: replace
          patch: /brand/id
          value: 1323057
      items:
        type: object
        properties:
          op:
            enum:
              - replace
              - remove
              - add
              - move
              - copy
              - test
            description: Operação a ser executada
          path:
            type: string
            description: Propriedade a ser modificada
          value:
            description: Valor da propriedade
    ProductDetail:
      allOf:
        - $ref: '#/components/schemas/Product'
    ProductCharacteristic:
      required:
        - index
        - name
        - value
      type: object
      properties:
        index:
          type: integer
          description: Index da característica
          format: int64
        name:
          type: string
          description: Nome da característica
          maxLength: 255
        value:
          type: string
          description: Valor da característica
          maxLength: 255
    ProductBrand:
      type: object
      properties:
        id:
          type: integer
          description: Id da marca gerado pelo ANYMARKET
          format: int64
        name:
          type: string
          description: Nome da marca
          maxLength: 255
        partnerId:
          type: string
          description: Id da Marca no Parceiro
          maxLength: 255
    SimpleSku:
      required:
        - id
        - title
      type: object
      properties:
        id:
          type: integer
          description: Id do SKU gerado pelo ANYMARKET
          format: int64
        title:
          type: string
          description: Título do SKU
          maxLength: 150
        partnerId:
          type: string
          description: Código do SKU no parceiro
          maxLength: 120
    Sku:
      required:
        - id
        - title
        - amount
        - price
        - sellPrice
        - additionalTime
      type: object
      properties:
        id:
          type: integer
          description: Id do SKU gerado pelo ANYMARKET
          format: int64
        title:
          type: string
          description: Título do SKU
          maxLength: 150
        partnerId:
          type: string
          description: SKU do parceiro. O código desse SKU será enviado para a maioria dos marketplaces e será utilizado como vínculo entre o ANYMARKET e o marketplace
          maxLength: 120
        ean:
          type: string
          description: Código de barras do SKU
          maxLength: 13
        amount:
          type: number
          description: Quantidade de estoque do SKU
          format: double
          minimum: 0
        additionalTime:
          type: number
          description: 'Prazo Adicional para entrega do produto. Também chamado de ''crossdocking'' este é o prazo de preparo de cada produto para envio, seja de fabricação, aquisição, embalagem ou redirecionamento de local. Utilizado em marketplaces como B2W e CNOVA.'
          format: int64
          minimum: 0
        price:
          type: number
          description: Preço do SKU
          format: double
        sellPrice:
          type: number
          description: Preço por do SKU (utilizado quando o definitionPriceScope for igual a SKU)
          format: double
        variations:
          type: array
          description: Valores de variação
          items:
            $ref: '#/components/schemas/VariationValue'
    SkuPost:
      type: object
      required:
        - amount
        - price
        - title
      properties:
        title:
          type: string
          description: Título do SKU
          maxLength: 150
        partnerId:
          type: string
          description: Código do SKU no parceiro
          maxLength: 120
        ean:
          type: string
          maxLength: 13
        amount:
          type: number
          description: Quantidade de stock do SKU
          format: double
          minimum: 0
        price:
          type: number
          description: Preço do SKU
          format: double
        additionalTime:
          type: number
          description: Prazo Adicional para entrega. Tambem chamado de 'crossdocking' este é o prazo de preparo de cada produto para envio. Utilizado em marketplaces como B2W e CNOVA. Caso não seja informado será atribuído o valor default 0.
          format: double
          minimum: 0
        variations:
          type: object
          description: Nome e valor da variação
          properties:
            variationName:
              type: string
              description: Nome da variação (substituir pelo nome de sua variação)
              enum:
                - VariationValue
    SkuUpdate:
      type: object
      required:
        - amount
        - price
      properties:
        title:
          type: string
          description: Título do SKU
          maxLength: 150
        partnerId:
          type: string
          description: Código do SKU no parceiro
          maxLength: 120
        ean:
          type: string
          maxLength: 13
        amount:
          type: number
          description: Quantidade de stock do SKU
          format: double
          minimum: 0
        price:
          type: number
          description: Preço do SKU
          format: double
        variations:
          type: object
          description: Nome e valor da variação
          properties:
            variationName:
              type: string
              description: Nome da variação (substituir pelo nome de sua variação)
              enum:
                - VariationValue
    SkuPut:
      type: object
      properties:
        title:
          type: string
          description: Título do SKU
          maxLength: 150
        partnerId:
          type: string
          description: Código do SKU no parceiro
          maxLength: 120
        ean:
          type: string
          maxLength: 13
        price:
          type: number
          description: 'Preço (alterável apenas no tipo de controle "Manual, eu controlo o preço pelo SKU")'
          format: double
        sellPrice:
          type: number
          description: 'Preço por do SKU (utilizado quando o tipo de controle for "Manual, eu controlo o preço pelo SKU")'
          format: double
    SkuDetail:
      allOf:
        - $ref: '#/components/schemas/Sku'
    SkuMarketplaceField:
      type: object
      description: Informações especificas do anúncio por marketplace
      properties:
        title:
          type: string
          description: 'B2W,WALMART,MERCADO LIVRE'
          format: int64
        template:
          type: string
          description: MERCADO LIVRE
        priceFactor:
          type: string
          description: 'B2W,CNOVA,WALMART,ECOMMERCE,MERCADO LIVRE'
          format: int64
        DISCOUNT_TYPE:
          type: string
          description: 'B2W,CNOVA,WALMART,ECOMMERCE,MERCADO LIVRE'
          format: int64
        DISCOUNT_VALUE:
          type: string
          description: 'B2W,CNOVA,WALMART,ECOMMERCE,MERCADO LIVRE'
          format: int64
        HAS_DISCOUNT:
          type: string
          description: 'B2W,CNOVA,ECOMMERCE'
          format: int64
        CONCAT_ATTRIBUTES:
          type: string
          description: B2W
          format: int64
        delivery_type:
          type: string
          description: B2W
          format: int64
        SHIPMENT:
          type: string
          description: B2W
          format: int64
        crossDocking:
          type: string
          description: B2W
          format: int64
        CUSTOM_DESCRIPTION:
          type: string
          description: B2W
          format: int64
        EAN:
          type: string
          description: 'B2W,CNOVA'
          format: int64
        MANUFACTURING_TIME:
          type: string
          description: CNOVA
          format: int64
        VALUE:
          type: string
          description: 'WALMART,MERCADO LIVRE'
          format: int64
        PERCENT:
          type: string
          description: 'WALMART,MERCADO LIVRE'
          format: int64
        bronze_price:
          type: string
          description: MERCADO LIVRE
          format: int64
        bronze_price_factor:
          type: string
          description: MERCADO LIVRE
          format: int64
        buying_mode:
          type: string
          description: MERCADO LIVRE
          format: int64
        category_with_variation:
          type: string
          description: MERCADO LIVRE
          format: int64
        condition:
          type: string
          description: MERCADO LIVRE
          format: int64
        free_price:
          type: string
          description: MERCADO LIVRE
          format: int64
        free_price_factor:
          type: string
          description: MERCADO LIVRE
          format: int64
        free_shipping:
          type: string
          description: MERCADO LIVRE
          format: int64
        gold_premium_price:
          type: string
          description: MERCADO LIVRE
          format: int64
        gold_premium_price_factor:
          type: string
          description: MERCADO LIVRE
          format: int64
        gold_price:
          type: string
          description: MERCADO LIVRE
          format: int64
        gold_price_factor:
          type: string
          description: MERCADO LIVRE
          format: int64
        gold_pro_price:
          type: string
          description: MERCADO LIVRE
          format: int64
        gold_pro_price_factor:
          type: string
          description: MERCADO LIVRE
          format: int64
        gold_special_price:
          type: string
          description: MERCADO LIVRE
          format: int64
        gold_special_price_factor:
          type: string
          description: MERCADO LIVRE
          format: int64
        listing_type_id:
          type: string
          description: MERCADO LIVRE
          format: int64
        shipping_local_pick_up:
          type: string
          description: MERCADO LIVRE
          format: int64
        shipping_mode:
          type: string
          description: MERCADO LIVRE
          format: int64
        silver_price:
          type: string
          description: MERCADO LIVRE
          format: int64
        silver_price_factor:
          type: string
          description: MERCADO LIVRE
          format: int64
    SkuMarketplace:
      required:
        - id
        - accountName
        - marketPlace
        - idAccount
        - index
        - publicationStatus
        - marketPlaceStatus
        - priceFactor
        - price
        - fields
      type: object
      properties:
        id:
          type: integer
          description: Id do anúncio no ANYMARKET
          format: int64
        accountName:
          type: string
          description: Identificador da conta no marketplace
        idAccount:
          type: number
          description: Id da conta gerado automático pelo ANYMARKET
        marketPlace:
          type: string
          description: Identificador do Marketplace
          enum:
            - B2W
            - CNOVA
            - ECOMMERCE
            - MERCADO_LIVRE
            - WALMART
            - GFG
            - NETSHOES
            - VTEX;
        idInMarketplace:
          type: string
          description: Id do anúncio no Marketplace
          maxLength: 255
        index:
          type: integer
          description: Índice do anúncio por Marketplace
          format: int64
        publicationStatus:
          type: string
          description: Status do anúncio no ANYMARKET
          enum:
            - ACTIVE
            - CLOSED
            - CORRUPTED
            - PAUSED
            - UNPUBLISHED
            - WITHOUT_STOCK
        marketplaceStatus:
          type: string
          description: Status do anúncio no marketplace
          maxLength: 255
        price:
          type: number
          description: Preço do anúncio
          format: double
        priceFactor:
          type: number
          description: Markup da transmissão
          format: double
        discountPrice:
          type: number
          description: Preço com desconto do anúncio
          format: double
        permalink:
          type: string
          description: Link da publicação no marketplace
        skuInMarketplace:
          type: string
          description: Identificador do SKU no marketplace
        fields:
          $ref: '#/components/schemas/SkuMarketplaceField'
        attributes:
          type: object
          description: |
            Lista os vínculos de tipo de variação e valor da variação da publicação com os valores do marketplace. Podem ser texto ou números de acordo com cada marketplace.



            {
              "63000":"71994"
            }



            Exemplo do Mercado Livre onde para o tipo de variação (cor, tamanho, outros) e para os valores são utilizados valores numéricos.
          additionalProperties:
            type: string
        marketplaceItemCode:
          type: string
          description: Código do anúncio no marketplace
        warnings:
          type: array
          description: 'Lista de pendências do produto. Caso exista alguma pendência, o anúncio somente terá atualização de preço, estoque e status'
          items:
            type: string
            description: Descrição da pendência
      description: ''
    PostSkuMarketplace:
      type: object
      required:
        - marketPlace
        - price
        - discountPrice
        - fields
      properties:
        idInMarketplace:
          type: string
          description: Id do anúncio no Marketplace
          maxLength: 255
        marketPlace:
          type: string
          description: Marketplace
          enum:
            - B2W
            - CNOVA
            - ECOMMERCE
            - MERCADO_LIVRE
            - WALMART
            - GFG
            - NETSHOES
            - VTEX
        accountName:
          type: string
          description: Identificador da conta do Marketplace
        price:
          type: number
          description: Preço do anúncio
          format: double
        discountPrice:
          type: number
          description: Preço com desconto do anúncio
          format: double
        permalink:
          type: string
          description: Link da publicação no marketplace
        skuInMarketplace:
          type: string
          description: Identificador do SKU no marketplace
        fields:
          $ref: '#/components/schemas/SkuMarketplaceField'
    PutSkuMarketplace:
      type: object
      required:
        - price
      properties:
        publicationStatus:
          type: string
          description: Status do anúncio no ANYMARKET
          enum:
            - ACTIVE
            - CLOSED
            - CORRUPTED
            - PAUSED
            - UNPUBLISHED
            - WITHOUT_STOCK
        marketplaceStatus:
          type: string
          description: Status do anúncio no marketplace
          maxLength: 255
        price:
          type: number
          description: Preço do anúncio
          format: double
        discountPrice:
          type: number
          description: Preço com desconto do anúncio
          format: double
        priceFactor:
          type: number
          description: Markup da transmissão
          format: double
        permalink:
          type: string
          description: Link da publicação no marketplace
        skuInMarketplace:
          type: string
          description: 'Identificador do SKU no marketplace. A atualização somente é permitida se o campo publicationStatus estiver como UNPUBLISHED, caso contrário não será possível atualizar o campo.'
        fields:
          $ref: '#/components/schemas/SkuMarketplaceField'
    SkuMarketplaceDetail:
      allOf:
        - $ref: '#/components/schemas/SkuMarketplace'
    PutSkuMarketplaceUpdatePricesResource:
      type: array
      description: Lista contendo as informações de Preço De (price) e Preço Por (discountPrice) de anúncios
      items:
        $ref: '#/components/schemas/SkuMarketplaceUpdatePricesResource'
    SkuMarketplaceUpdatePricesResource:
      type: object
      required:
        - id
        - price
        - discountPrice
      description: Informações de Preço De e Preço Por de um anúncio
      properties:
        id:
          type: integer
          description: ID do anúncio no ANYMARKET
          format: int64
        price:
          type: number
          description: Preço do anúncio
          format: double
        discountPrice:
          type: number
          description: Preço com desconto do anúncio
          format: double
    PutSkuMarketplaceUpdatePricesResourceResponse:
      type: array
      description: Lista contendo as informações de Preço De (price) e Preço Por (discountPrice) de anúncios
      items:
        $ref: '#/components/schemas/SkuMarketplaceUpdatePricesResourceResponse'
    SkuMarketplaceUpdatePricesResourceResponse:
      type: object
      required:
        - id
        - errorMsg
      description: Informações de Preço De e Preço Por de um anúncio
      properties:
        id:
          type: integer
          description: ID do anúncio no ANYMARKET
          format: int64
        errorMsg:
          type: string
          description: Mensagem de erro
    SkuMarketplacePricePost:
      type: object
      description: Dados de atualização de preço.
      properties:
        price:
          type: number
          description: Preço do anúncio.
        discountPrice:
          type: number
          description: Preço com desconto do anúncio
        fields:
          type: array
          items:
            type: object
            properties:
              key:
                type: string
              value:
                type: string
    SkuMarketplaceUpdatePricesErrorResource:
      type: object
      description: Contem Lista para apresentar erros que aconteceram ao atualizar preço.
      properties:
        errors:
          type: array
          items:
            type: object
            properties:
              key:
                type: string
                description: chave do SkuMarketplace que não pode ser atualizado.
              value:
                type: string
                description: Mensagem de erro.
    SkuMarketplaceById:
      required:
        - id
        - accountName
        - marketPlace
        - idAccount
        - index
        - publicationStatus
        - marketPlaceStatus
        - priceFactor
        - price
        - fields
      type: object
      properties:
        id:
          type: integer
          description: Id do anúncio no ANYMARKET
          format: int64
        accountName:
          type: string
          description: Identificador da conta no marketplace
        idAccount:
          type: number
          description: Id da conta gerado automático pelo ANYMARKET
        marketPlace:
          type: string
          description: Identificador do Marketplace
          enum:
            - B2W
            - CNOVA
            - ECOMMERCE
            - MERCADO_LIVRE
            - WALMART
            - GFG
            - NETSHOES
            - VTEX;
        idInMarketplace:
          type: string
          description: Id do anúncio no Marketplace
          maxLength: 255
        marketplaceItemCode:
          type: string
          description: Id do anúncio no Marketplace
          maxLength: 255
        index:
          type: integer
          description: Índice do anúncio por Marketplace
          format: int64
        publicationStatus:
          type: string
          description: Status do anúncio no ANYMARKET
          enum:
            - ACTIVE
            - CLOSED
            - CORRUPTED
            - PAUSED
            - UNPUBLISHED
            - WITHOUT_STOCK
        marketplaceStatus:
          type: string
          description: Status do anúncio no marketplace
          maxLength: 255
        price:
          type: number
          description: Preço do anúncio
          format: double
        priceFactor:
          type: number
          description: Markup da transmissão
          format: double
        discountPrice:
          type: number
          description: Preço com desconto do anúncio
          format: double
        permalink:
          type: string
          description: Link da publicação no marketplace
        skuInMarketplace:
          type: string
          description: Identificador do SKU no marketplace
        fields:
          $ref: '#/components/schemas/SkuMarketplaceField'
        availableStock:
          required:
            - amount
            - availableAmount
            - cost
            - physicalAmount
            - totalReservation
            - stockLocal
          type: object
          description: Informações de Estoque
          properties:
            amount:
              type: number
              description: Quantidade total
              format: double
            availableAmount:
              type: number
              description: Quantidade disponível
              format: double
            cost:
              type: number
              description: Custo médio do SKU no estoque. A partir desse custo será calculado o preço final do produto caso o tipo do cálculo de preço esteja como atutomático.
              format: double
            physicalAmount:
              type: number
              description: Quantidade em estoque físico
              format: double
            totalReservation:
              type: number
              description: Quantidade de estoque reservada
              format: double
            stockLocal:
              type: string
              description: Local do Estoque
        attributes:
          type: object
          description: |
            Lista os vínculos de tipo de variação e valor da variação da publicação com os valores do marketplace. Podem ser texto ou números de acordo com cada marketplace.



            {
              "63000":"71994"
            }



            Exemplo do Mercado Livre onde para o tipo de variação (cor, tamanho, outros) e para os valores são utilizados valores numéricos.
          additionalProperties:
            type: string
        warnings:
          type: array
          description: 'Lista de pendências do produto. Caso exista alguma pendência, o anúncio somente terá atualização de preço, estoque e status'
          items:
            type: string
            description: Descrição da pendência
    NbmID:
      type: object
      properties:
        id:
          type: string
          description: Id do NBM
    Nbm:
      required:
        - id
        - description
      type: object
      properties:
        id:
          type: string
          description: Id do NBM
        description:
          type: string
          description: Descrição do NBM
    OriginID:
      type: object
      properties:
        id:
          type: integer
          description: |
            Id da origem. Os valores vão de 0 a 7, conforme tabela abaixo:



              **0**: Nacional

              **1**: Estrangeira - Importação direta

              **2**: Estrangeira - Adquirida no mercado interno

              **3**: Nacional, mercadoria ou bem com Conteúdo de Importação superior a 40%

              **4**: Nacional, cuja produção tenha sido feita em conformidade com os processos produtivos básicos de que tratam as legislações citadas nos Ajustes

              **5**: Nacional, mercadoria ou bem com Conteúdo de Importação inferior ou igual a 40%

              **6**: Estrangeira - Importação direta, sem similar nacional, constante em lista da CAMEX

              **7**: Estrangeira - Adquirida no mercado interno, sem similar nacional, constante em lista da CAMEX
          format: int64
    Origin:
      required:
        - id
      type: object
      properties:
        id:
          type: integer
          description: |
            Id da origem. Os valores vão de 0 a 7, conforme tabela abaixo:



              **0**: Nacional

              **1**: Estrangeira - Importação direta

              **2**: Estrangeira - Adquirida no mercado interno

              **3**: Nacional, mercadoria ou bem com Conteúdo de Importação superior a 40%

              **4**: Nacional, cuja produção tenha sido feita em conformidade com os processos produtivos básicos de que tratam as legislações citadas nos Ajustes

              **5**: Nacional, mercadoria ou bem com Conteúdo de Importação inferior ou igual a 40%

              **6**: Estrangeira - Importação direta, sem similar nacional, constante em lista da CAMEX

              **7**: Estrangeira - Adquirida no mercado interno, sem similar nacional, constante em lista da CAMEX
          format: int64
        description:
          type: string
          description: Descrição da origem
    VariationType:
      required:
        - id
        - name
        - visualVariation
      type: object
      properties:
        id:
          type: integer
          description: Id do tipo de variação gerado pelo ANYMARKET
          format: int64
        name:
          type: string
          description: Descrição da origem
        visualVariation:
          type: boolean
          description: É visual
    VariationGet:
      required:
        - id
        - name
        - visualVariation
      type: object
      properties:
        id:
          type: integer
          description: Id do tipo de variação gerado pelo ANYMARKET
          format: int64
        name:
          type: string
          description: Descrição da origem
        partnerId:
          type: string
          description: Id da variação no parceiro
        values:
          type: array
          description: Valores da variação
          items:
            $ref: '#/components/schemas/VariationValueGet'
        visualVariation:
          type: boolean
          description: É visual
    VariationValueGet:
      required:
        - id
        - description
      type: object
      properties:
        id:
          type: number
          description: Código do valor de variação
        description:
          type: string
          description: Descrição do valor de variação
        partnerId:
          type: string
          description: Id do valor no parceiro
    VariationValue:
      required:
        - id
        - description
        - type
      type: object
      properties:
        id:
          type: integer
          description: Id do valor de variação gerado pelo ANYMARKET
          format: int64
        description:
          type: string
          description: Descrição da origem
        type:
          $ref: '#/components/schemas/VariationType'
    BasicVariationType:
      required:
        - id
        - name
      type: object
      properties:
        id:
          type: integer
          description: Id do tipo de variação gerado pelo ANYMARKET
          format: int64
        name:
          type: string
          description: Nome do tipo de variação
    BasicVariationValue:
      type: object
      properties:
        id:
          type: integer
          description: Id do valor de variação gerado pelo ANYMARKET
          format: int64
        name:
          type: string
          description: Descrição do valor de variação
        type:
          $ref: '#/components/schemas/BasicVariationType'
    VariationTypePost:
      required:
        - name
        - visualVariation
      type: object
      properties:
        name:
          type: string
          description: Nome do tipo de variação
          maxLength: 200
        partnerId:
          type: string
          description: Id do tipo de variação no parceiro
          maxLength: 40
        visualVariation:
          type: boolean
          description: Indica se o tipo de variação possúi variação visual
        values:
          type: array
          description: valores da variação
          items:
            type: object
            properties:
              description:
                type: string
                description: Descrição do valor de variação
                maxLength: 4000
    VariationValuePost:
      required:
        - description
      type: object
      properties:
        description:
          type: string
          description: Descrição do valor de variação
          maxLength: 4000
        partnerId:
          type: string
          description: Id do tipo de variação no parceiro
          maxLength: 100
    VariationTypePut:
      type: object
      properties:
        name:
          type: string
          description: Nome do tipo de variação
          maxLength: 200
        partnerId:
          type: string
          description: Id do tipo de variação no parceiro
          maxLength: 40
        visualVariation:
          type: boolean
          description: Indica se o tipo de variação possúi variação visual
    VariationValuePut:
      required:
        - description
      type: object
      properties:
        description:
          type: string
          description: Descrição do valor de variação
          maxLength: 4000
        partnerId:
          type: string
          description: Id do tipo de variação no parceiro
          maxLength: 100
    PrintTagPost:
      required:
        - description
      type: object
      properties:
        orders:
          type: array
          description: Id´s das vendas
          items:
            type: integer
            description: Id da venda
    MessagesPost:
      required:
        - description
      type: object
      properties:
        message:
          type: string
          description: Texto da mensagem para o comprador do pedido
    StockLocalGet:
      type: object
      properties:
        id:
          type: integer
          description: Id do local de estoque
        name:
          type: string
          description: Descrição do local de estoque
        virtual:
          type: boolean
          description: Identifica se o local de estoque é virtual
        distributor:
          type: string
          description: Distribuidor (apenas para estoques virtuais)
        defaultLocal:
          type: boolean
          description: Identifica se o local de estoque é o padrão
        zipCode:
          type: string
          description: CEP do local de estoque
    StockLocalPost:
      type: object
      required:
        - name
        - virtual
        - defaultLocal
      properties:
        name:
          type: string
          description: Descrição do local de estoque
        virtual:
          type: boolean
          description: Identifica se o local de estoque é virtual
        defaultLocal:
          type: boolean
          description: Identifica se o local de estoque é o padrão
        zipCode:
          type: string
          description: CEP do local de estoque
    StockLocalPut:
      type: object
      required:
        - id
        - name
        - virtual
        - defaultLocal
      properties:
        id:
          type: integer
          description: Id do SKU gerado pelo ANYMARKET
          format: int64
        name:
          type: string
          description: Descrição do local de estoque
        virtual:
          type: boolean
          description: Identifica se o local de estoque é virtual
        defaultLocal:
          type: boolean
          description: Identifica se o local de estoque é o padrão
        zipCode:
          type: string
          description: CEP do local de estoque
    OrderItemStockGet:
      type: object
      required:
        - idLocalStock
        - stockName
        - amount
      properties:
        idLocalStock:
          type: integer
          description: Id do estoque do local
          format: int64
        stockName:
          type: string
          description: Descrição do local de estoque
        amount:
          type: number
          description: Quantidade em estoque do local
          format: double
    XmlFulfillment:
      required:
        - type
        - url
      type: object
      properties:
        type:
          type: string
        url:
          type: string
    SkuFileExport:
      type: object
      required:
        - url
      properties:
        url:
          type: string
          description: Url para download de arquivo
        dateTime:
          type: string
          description: Data do processamento do arquivo exportado
        documentId:
          type: string
          description: Id do documento exportado
        linesProcessed:
          type: integer
          description: Linhas processadas
          format: int64
        countLines:
          type: integer
          description: Linhas contadas
          format: int64
        FileExportStatus:
          type: string
          description: Status de processamento
          enum:
            - WAITING
            - FINISHED
            - FINISHED_WITHOUT_DATA
            - PROCESSING
            - ERROR
    Page_Transmission_:
      required:
        - links
        - page
      type: object
      allOf:
        - properties:
            links:
              description: Referências de paginação
              type: array
              items:
                $ref: '#/components/schemas/PageLinks'
            content:
              description: Lista de Transmissões
              type: array
              items:
                $ref: '#/components/schemas/Transmission'
            page:
              $ref: '#/components/schemas/PageMetadata'
    Page_Template_:
      required:
        - links
        - page
      type: object
      allOf:
        - properties:
            links:
              description: Referências de paginação
              type: array
              items:
                $ref: '#/components/schemas/PageLinks'
            content:
              description: Lista de Template
              type: array
              items:
                $ref: '#/components/schemas/Template'
            page:
              $ref: '#/components/schemas/PageMetadata'
    Page_Category_:
      required:
        - links
        - page
      type: object
      allOf:
        - properties:
            links:
              description: Referências de paginação
              type: array
              items:
                $ref: '#/components/schemas/PageLinks'
            content:
              description: Lista de categorias
              type: array
              items:
                $ref: '#/components/schemas/Category'
            page:
              $ref: '#/components/schemas/PageMetadata'
    Page_Callback_:
      required:
        - links
        - page
      type: object
      allOf:
        - properties:
            links:
              description: Referências de paginação
              type: array
              items:
                $ref: '#/components/schemas/PageLinks'
            content:
              description: Lista de callback
              type: array
              items:
                $ref: '#/components/schemas/Callback'
            page:
              $ref: '#/components/schemas/PageMetadata'
    Page_Brand_:
      required:
        - links
        - page
      type: object
      allOf:
        - properties:
            links:
              description: Referências de paginação
              type: array
              items:
                $ref: '#/components/schemas/PageLinks'
            content:
              description: Lista de marcas
              type: array
              items:
                $ref: '#/components/schemas/Brand'
            page:
              $ref: '#/components/schemas/PageMetadata'
    Page_Order_:
      required:
        - links
        - page
      type: object
      allOf:
        - properties:
            links:
              description: Referências de paginação
              type: array
              items:
                $ref: '#/components/schemas/PageLinks'
            content:
              description: Lista de pedidos
              type: array
              items:
                $ref: '#/components/schemas/Order'
            page:
              $ref: '#/components/schemas/PageMetadata'
    Page_Product_:
      required:
        - links
        - page
      type: object
      allOf:
        - properties:
            links:
              description: Referências de paginação
              type: array
              items:
                $ref: '#/components/schemas/PageLinks'
            content:
              description: Lista de produtos
              type: array
              items:
                $ref: '#/components/schemas/Product'
            page:
              $ref: '#/components/schemas/PageMetadata'
    Page_VariationValue_:
      required:
        - links
        - page
      type: object
      allOf:
        - properties:
            links:
              description: Referências de paginação
              type: array
              items:
                $ref: '#/components/schemas/PageLinks'
            content:
              description: Lista de categorias
              type: array
              items:
                $ref: '#/components/schemas/VariationValueGet'
            page:
              $ref: '#/components/schemas/PageMetadata'
    Page_VariationType_:
      required:
        - links
        - page
      type: object
      allOf:
        - properties:
            links:
              description: Referências de paginação
              type: array
              items:
                $ref: '#/components/schemas/PageLinks'
            content:
              description: Lista de categorias
              type: array
              items:
                $ref: '#/components/schemas/VariationGet'
            page:
              $ref: '#/components/schemas/PageMetadata'
  securitySchemes:
    gumgaToken:
      name: gumgaToken
      type: apiKey
      in: header
      description: ''
security:
  - gumgaToken: []
