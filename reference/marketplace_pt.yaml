openapi: 3.0.0
info:
  title: API MARKETPLACE
  version: '1.0'
  contact:
    email: anymarketdev@db1.com.br
    name: AnyMarket Developers
    url: 'http://developers.anymarket.com.br/'
  x-logo:
    url: 'https://anymarket.com.br/wp-content/uploads/2018/07/icon-anymarket-300x300.png'
  x-preferred: true
  x-providerName: API MARKETPLACE
  description: |+
    Nesse conjunto de chamadas irá conter as chamadas necessárias que o marketplace precisa realizar na camada ANYMARKET afim de obter dados como:

    - Informações sobre produto;
    - Informação de atualização de dados das transmissões;
    - Atualizar status de transmissões;
    - Inserir pedidos;
    - Informação de dados do pedido;
    - Atualizar informações de pedidos;
    - Cotação de frete;
    - Monitoramento;

servers:
  - url: 'http://sandbox-api.anymarket.com.br/marketplace/api'
    description: Sandbox
paths:
  /brands:
    get:
      summary: Consulta todas as marcas
      operationId: get-brands
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page_Brand'
              examples:
                example-1:
                  $ref: '#/components/examples/brands_200'
          headers: {}
      description: Consulta todas as marcas
      parameters:
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/sort'
      tags:
        - Marcas
    post:
      summary: Cria uma marca com os dados informados
      operationId: post-brands
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Brand'
        '422':
          description: Unprocessable Entity (WebDAV)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/422'
      description: Cria uma marca com os dados informados
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BrandAdd'
        description: ''
      tags:
        - Marcas
  '/brands/{id}':
    get:
      summary: Consulta marca
      operationId: get-brands-id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Brand'
              examples:
                example-1:
                  $ref: '#/components/examples/brands_200'
          headers: {}
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
      description: Consulta os detalhes de uma marca
      parameters: []
      tags:
        - Marcas
    parameters:
      - schema:
          type: integer
          format: int64
          minimum: 1
          exclusiveMaximum: true
        name: id
        in: path
        required: true
        description: Id da marca gerado pelo ANYMARKET
    delete:
      summary: Exclui uma marca
      operationId: delete-brands-id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Brand'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
      description: Exclui uma marca
      tags:
        - Marcas
    put:
      summary: Atualiza os dados de uma marca
      operationId: put-brands-id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Brand'
              examples: {}
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
        '422':
          description: Unprocessable Entity (WebDAV)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/422'
      description: Atualiza os dados de uma marca
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BrandAdd'
      tags:
        - Marcas
  /testIntegration:
    post:
      summary: ''
      operationId: post-testintegration
      responses:
        '200':
          description: OK
    parameters: []
components:
  schemas:
    '404':
      description: ''
      type: object
      x-examples:
        example-1:
          code: '422'
          message: O nome reduzido deve ter no máximo 30 caracteres.
      properties:
        code:
          type: string
          minLength: 1
        message:
          type: string
          minLength: 1
      examples:
        - code: '404'
          message: Recurso com o id 'xxx' não encontrado.
      x-tags:
        - erro
      title: 422 - Error
    '422':
      description: ''
      type: object
      x-examples:
        example-1:
          code: '422'
          message: O nome reduzido deve ter no máximo 30 caracteres.
      properties:
        code:
          type: string
          minLength: 1
        message:
          type: string
          minLength: 1
      examples:
        - code: '422'
          message: O campo informado esta fora das especificações.
      x-tags:
        - erro
      title: 422 - Error
    Brand:
      title: Brand
      allOf:
        - properties:
            id:
              type: integer
              format: int64
              minimum: 0
              description: Id interno
            name:
              type: string
              description: Nome da marca
              minLength: 1
              maxLength: 255
            reducedName:
              type: string
              description: Nome reduzido da marca
              minLength: 0
              maxLength: 30
            partinerId:
              type: string
              minLength: 0
              maxLength: 255
              description: Id da marca no parceiro
      type: object
      examples:
        - id: 123456
          name: Brastemp
          reducedName: brastemp
          partinerId: marca-001-brastemp
      description: Model return brand
      x-tags:
        - Marcas
    BrandAdd:
      title: BrandAdd
      allOf:
        - properties:
            name:
              type: string
              description: Nome da marca
              minLength: 1
              maxLength: 255
            reducedName:
              type: string
              description: Nome reduzido da marca
              minLength: 0
              maxLength: 30
            partinerId:
              type: string
              minLength: 0
              maxLength: 255
              description: Id da marca no parceiro
          required:
            - name
      description: Model brand add
      type: object
      x-tags:
        - Marcas
    Page_Brand:
      title: Page_Brand
      allOf:
        - properties:
            links:
              type: array
              description: Referências de paginação
              uniqueItems: false
              minItems: 1
              maxItems: 1
              items:
                $ref: '#/components/schemas/PageLinks'
            content:
              type: array
              description: Lista de marcas
              items:
                $ref: '#/components/schemas/Brand'
            page:
              $ref: '#/components/schemas/PageMetadata'
      type: object
      x-tags:
        - Marcas
      description: ''
    PageLinks:
      title: PageLinks
      type: object
      x-tags:
        - page
        - pageable
      properties:
        rel:
          type: string
          description: Relacionamento do hyperlink
          example: next
        href:
          type: string
          description: Url de definição do recurso
          example: 'https://.../v2/component?limit=5&offset=5'
          format: uri
    PageMetadata:
      title: PageMetadata
      type: object
      properties:
        size:
          type: integer
          description: Tamanho da página
          format: int64
          minimum: 5
          readOnly: true
        totalElements:
          type: integer
          description: Total de elementos existentes
          format: int64
          minimum: 0
          readOnly: true
        totalPages:
          type: integer
          description: Total de páginas disponíveis
          format: int64
          minimum: 1
          readOnly: true
        number:
          type: integer
          description: Número da página atual
          format: int64
          minimum: 1
          readOnly: true
      x-tags:
        - page
        - pageable
  securitySchemes:
    x-anymarket-token:
      name: x-anymarket-token
      type: apiKey
      in: header
      description: Token de segurança fornecido pela Anymarket
  parameters:
    offset:
      name: offset
      in: query
      required: false
      schema:
        type: integer
        format: int64
        default: 1
        minimum: 1
        exclusiveMaximum: true
        example: 1
      description: Posição de início da paginação
    limit:
      name: limit
      in: query
      required: false
      schema:
        type: integer
        format: int64
        minimum: 5
        exclusiveMaximum: true
        default: 5
        example: 5
      description: Número máximo de marcas
    sort:
      name: sort
      in: query
      required: false
      schema:
        type: string
      description: Atributo para ordenação
  examples:
    brands_200:
      value:
        links:
          - rel: string
            href: string
        content:
          - rel: string
            href: string
        page:
          size: 0
          totalElements: 0
          totalPages: 0
          number: 0
security:
  - gumgaToken: []
