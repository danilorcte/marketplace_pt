openapi: 3.0.0
info:
  title: API MARKETPLACE
  version: '1.0'
  contact:
    email: anymarketdev@db1.com.br
    name: AnyMarket Developers
    url: 'http://developers.anymarket.com.br/'
  x-logo:
    url: 'https://anymarket.com.br/wp-content/uploads/2018/07/icon-anymarket-300x300.png'
  x-preferred: true
  x-providerName: API MARKETPLACE
  description: |
    Nesse conjunto de chamadas irá conter as chamadas necessárias que o marketplace precisa realizar na camada ANYMARKET afim de obter dados como:

    - Informações sobre produto;
    - Informação de atualização de dados das transmissões;
    - Atualizar status de transmissões;
    - Inserir pedidos;
    - Informação de dados do pedido;
    - Atualizar informações de pedidos;
    - Cotação de frete;
    - Monitoramento;
servers:
  - url: 'http://sandbox-api.anymarket.com.br/marketplace/api'
    description: Sandbox
paths:
  '/skumarketplace/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    put:
      summary: Atualizar dados da transmissão
      operationId: put-skumarketplace-id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      idSku:
                        type: integer
                        format: int64
                        minimum: 0
                        exclusiveMaximum: true
                  - $ref: ./remote_pt.yaml#/components/schemas/SkuMarketplace
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SkuMarketPlacePut'
      description: Atualizar dados da transmissão
      tags:
        - Anúncios
    get:
      summary: Consulta anúncio
      tags:
        - Anúncios
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SkuMarketplace'
      operationId: get-skumarketplace-id
      parameters:
        - schema:
            type: string
          in: header
      security:
        - appId: []
        - token: []
  /configuration:
    get:
      summary: Lista configurações
      tags:
        - Configuração
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ./remote_pt.yaml#/components/schemas/ConfigurationDTO
      operationId: get-api-configuration
      description: Lista configurações
    parameters: []
  '/configuration/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: Código de configuração gerado pelo Anymarket
    get:
      summary: Lista configurações com id específico
      tags:
        - Configuração
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./remote_pt.yaml#/components/schemas/ConfigurationDTO
      operationId: get-api-configuration-id
  '/orders/{id}/transmissionStatus':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    put:
      summary: Alterar status | Confirmação de consumo de atualização
      tags:
        - Pedidos
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
      operationId: put-orders-id-transmissionStatus
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderStatusUpdate'
      description: 'Quando o marketplace receber a notificação de atualização de um pedido, seja ele mudando para FATURADO, ENVIADO, CONCLUIDO ou CANCELADO no endpoint /updateOrderStatusInMarketPlace. Necessariamente o marketplace deve realizar o GET para consultar os dados do pedido e na sequencia utilizar do endpoint citado a cima, removendo a sinalização de sincronização e identificando qual o status do pedido no marketplace. Lembrando que caso não processe, o erro deve ser informado também nesse endpoint.'
  /orders:
    post:
      summary: Criando um pedido no ANYMARKET
      operationId: post-orders
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
              examples:
                Example - 1:
                  value:
                    code: '400'
                    message: Erro ao criar o recurso. Somente é possivel criar recurso com status x ou y.
                Example - 2:
                  value:
                    code: '400'
                    message: 'Erro ao criar o pedido. Já existe um pedido com id [%s].'
      parameters:
        - schema:
            type: boolean
          in: query
          name: orderNewPattern
      description: ''
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderPost'
      tags:
        - Pedidos
    get:
      summary: Listar todas os pedidos
      operationId: get-orders
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page_Order'
      tags:
        - Pedidos
      description: Obtém todos os pedidos do marketplace na base do cliente.
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/sort'
        - schema:
            type: string
            enum:
              - PENDING
              - PAID
              - INVOICED
              - SHIPPED
              - DELIVERED
              - CANCELED
          in: query
          name: status
          description: Status do pedido
        - schema:
            type: string
            format: date-time
          in: query
          name: createdAfter
          description: Data da criação do pedido
  '/orders/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: Código do pedido gerado pelo Anymarket
    get:
      summary: Lista pedido por id
      tags:
        - Pedidos
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
      operationId: get-orders-id
      description: Lista pedido por id
  '/orders/{id}/markAsPaid':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    put:
      summary: Marcar pedido como Pago
      tags:
        - Pedidos
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
      operationId: put-orders-id-markAsPaid
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                date:
                  type: string
                  format: date-time
      description: esse request informando a data de pagamento. Feito isso o ANYMARKET ira atualizar o status do pedido para PAGO.
  '/orders/{id}/markAsShipped':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    put:
      summary: Marcar pedido como Enviado
      tags:
        - Pedidos
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
      operationId: put-id-markAsShipped
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./remote_pt.yaml#/components/schemas/ApiTracking
      description: Marcar pedido como Enviado
  '/orders/{id}/markAsCanceled':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    put:
      summary: Marcar pedido como Cancelado
      tags:
        - Pedidos
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
      operationId: put-id-markAsCanceled
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CanceledStatusDTO'
      description: Marcar pedido como Cancelado
  '/orders/{id}/markAsDelivered':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    put:
      summary: Marcar pedido como Concluído
      tags:
        - Pedidos
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
      operationId: put-orders-id-markAsDelivered
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./remote_pt.yaml#/components/schemas/ApiTracking
      description: Marcar pedido como Concluído
  '/orders/{id}/markAsInvoiced':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    put:
      summary: Marcar pedido como Faturado
      tags:
        - Pedidos
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
      operationId: put-orders-id-markAsInvoiced
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderStatusUpdate'
      description: Marcar pedido como Faturado
components:
  schemas:
    '400':
      description: ''
      type: object
      x-examples:
        example-1:
          value:
            code: '400'
            message: Erro ao criar o recurso. Somente é possivel criar recurso com status x ou y.
      properties:
        code:
          type: string
          minLength: 1
        message:
          type: string
          minLength: 1
      examples:
        - code: '400'
          message: Erro ao criar o recurso. Somente é possivel criar recurso com status x ou y.
      x-tags:
        - erro
      title: 400 - Error
    '404':
      description: ''
      type: object
      x-examples:
        example-1:
          value:
            code: '404'
            message: Recurso com o id 'xxx' não encontrado.
      properties:
        code:
          type: string
          minLength: 1
        message:
          type: string
          minLength: 1
      examples:
        - code: '404'
          message: Recurso com o id 'xxx' não encontrado.
      x-tags:
        - erro
      title: 404 - Error
    '422':
      description: ''
      type: object
      x-examples:
        example-1:
          value:
            code: '422'
            message: O campo informado esta fora das especificações.
      properties:
        code:
          type: string
          minLength: 1
        message:
          type: string
          minLength: 1
      examples:
        - code: '422'
          message: O campo informado esta fora das especificações.
      x-tags:
        - erro
      title: 422 - Error
    '500':
      description: ''
      type: object
      x-examples:
        example-1:
          value:
            code: '500'
            message: Internal Server Error
      properties:
        code:
          type: string
          minLength: 1
        message:
          type: string
          minLength: 1
      examples:
        - code: '500'
          message: Internal Server Error
      x-tags:
        - erro
      title: 500 - Error
    SkuMarketplace:
      description: ''
      examples:
        - id: 0
          idInMarketplace: string
          marketPlace: B2W
          index: 0
          publicationStatus: string
          marketplaceStatus: string
          transmissionStatus: string
          errorMsg: string
          skuMarketPlaceMessage:
            message: string
            key: string
            parameters:
              parameter1: value1
              parameter2: value2
          price: 0
          priceFactor: 1
          discountPrice: 0
          skuInMarketplace: string
          marketplaceItemCode: string
          fields:
            title: string
            template: string
            priceFactor: string
            DISCOUNT_TYPE: string
            DISCOUNT_VALUE: string
            HAS_DISCOUNT: string
            CONCAT_ATTRIBUTES: string
            delivery_type: string
            SHIPMENT: string
            crossDocking: string
            CUSTOM_DESCRIPTION: string
            EAN: string
            MANUFACTURING_TIME: string
            VALUE: string
            PERCENT: string
            bronze_price: string
            bronze_price_factor: string
            buying_mode: string
            category_with_variation: string
            condition: string
            free_price: string
            free_price_factor: string
            free_shipping: string
            gold_premium_price: string
            gold_premium_price_factor: string
            gold_price: string
            gold_price_factor: string
            gold_pro_price: string
            gold_pro_price_factor: string
            gold_special_price: string
            gold_special_price_factor: string
            listing_type_id: string
            shipping_local_pick_up: string
            shipping_mode: string
            silver_price: string
            silver_price_factor: string
          availableStock:
            amount: 0
            availableAmount: 0
            cost: 0
            totalReservation: 0
            physicalAmount: 0
            reservedPending: 0
            reservedPaid: 0
            totalInInvoicedStatus: 0
            stockLocal: string
            additionalTime: 0
          attributes:
            cor: azul
            tamanho: grande
            material: inox
          idAccount: 0
          accountName: string
          origin: BIND
          isCatalog: true
          permalink: string
          title: string
          ean: string
      title: SkuMarketplace
      x-examples:
        example-1:
          value:
            id: -9223372036854776000
            idInMarketplace: string
            marketPlace: string
            index: 0
            publicationStatus: string
            marketplaceStatus: string
            transmissionStatus: string
            errorMsg: string
            skuMarketPlaceMessage:
              message: string
              key: string
              parameters:
                parameter1: value1
                parameter2: value2
            price: 0
            priceFactor: 0
            discountPrice: 0
            skuInMarketplace: string
            marketplaceItemCode: string
            fields:
              title: string
              template: string
              priceFactor: string
              DISCOUNT_TYPE: string
              DISCOUNT_VALUE: string
              HAS_DISCOUNT: string
              CONCAT_ATTRIBUTES: string
              delivery_type: string
              SHIPMENT: string
              crossDocking: string
              CUSTOM_DESCRIPTION: string
              EAN: string
              MANUFACTURING_TIME: string
              VALUE: string
              PERCENT: string
              bronze_price: string
              bronze_price_factor: string
              buying_mode: string
              category_with_variation: string
              condition: string
              free_price: string
              free_price_factor: string
              free_shipping: string
              gold_premium_price: string
              gold_premium_price_factor: string
              gold_price: string
              gold_price_factor: string
              gold_pro_price: string
              gold_pro_price_factor: string
              gold_special_price: string
              gold_special_price_factor: string
              listing_type_id: string
              shipping_local_pick_up: string
              shipping_mode: string
              silver_price: string
              silver_price_factor: string
            availableStock:
              amount: 0
              availableAmount: 0
              cost: 0
              totalReservation: 0
              physicalAmount: 0
              reservedPending: 0
              reservedPaid: 0
              totalInInvoicedStatus: 0
              stockLocal: string
              additionalTime: 0
            attributes:
              cor: azul
              tamanho: grande
              material: inox
            idAccount: 0
            accountName: string
            origin: BIND
            isCatalog: true
            permalink: string
            title: string
            ean: string
            status: string
            idInSite: string
            endDate: '2019-08-24T14:15:22Z'
            stock:
              amount: 0
              availableAmount: 0
              cost: 0
              totalReservation: 0
              physicalAmount: 0
              reservedPending: 0
              reservedPaid: 0
              totalInInvoicedStatus: 0
              stockLocal: string
              additionalTime: 0
            sku:
              id: -9223372036854776000
              partnerId: string
              amount: 0
              ean: string
              title: string
              price: 0
              sellPrice: 0
              additionalTime: 0
              variations:
                - id: 0
                  idInMarketplace: string
                  description: string
                  type:
                    id: 0
                    idInMarketplace: string
                    name: string
                    partnerId: string
                    visualVariation: true
                  partnerId: string
              product:
                id: 0
                title: string
                description: string
                model: string
                nbm:
                  id: string
                  description: string
                videoUrl: string
                definitionPriceScope: COST
                characteristics:
                  - index: 0
                    name: string
                    value: string
                origin:
                  id: 0
                  name: NACIONAL
                category:
                  id: 0
                  idInMarketplace: string
                  name: string
                  path: string
                height: 0
                length: 0
                width: 0
                weight: 0
                images:
                  - id: 0
                    index: 0
                    variation: string
                    thumbnailUrl: string
                    standardUrl: string
                    lowResolutionUrl: string
                    originalImage: string
                    url: string
                    statusMessage: string
                    status: UNPROCESSED
                    main: true
                    standardWidth: string
                    standardHeight: string
                    originalWidth: string
                    originalHeight: string
                brand:
                  id: 0
                  idInMarketplace: string
                  name: string
                  partnerId: string
                warrantyTime: 0
                warrantyText: string
                priceFactor: 0
                calculatedPrice: true
                hasVariations: true
                gender: MALE
                allowAutomaticSkuMarketplaceCreation: true
            mainSkuMarketplace: 0
      allOf:
        - $ref: '#/components/schemas/SkuMarketPlaceBase'
        - properties:
            id:
              type: integer
              description: Id do anúncio no ANYMARKET
              format: int64
            stock:
              $ref: ./remote_pt.yaml#/components/schemas/Stock
            attributes:
              $ref: ./remote_pt.yaml#/components/schemas/Attributes
            sku:
              $ref: ./remote_pt.yaml#/components/schemas/SKU
            mainSkuMarketplace:
              type: integer
              description: Status da publicação
              format: int64
              minimum: 0
              exclusiveMaximum: true
      required:
        - id
        - attributes
        - sku
        - mainSkuMarketplace
    SkuMarketPlacePut:
      title: SkuMarketPlacePut
      type: object
      properties:
        idInMarketplace:
          type: string
        status:
          type: string
        marketplaceStatus:
          type: string
        transmissionStatus:
          type: string
        errorMsg:
          type: string
        skuMarketPlaceMessage:
          $ref: ./remote_pt.yaml#/components/schemas/SkuMarketPlaceMessage
        idInSite:
          type: string
        fields:
          $ref: ./remote_pt.yaml#/components/schemas/SkuMarketplaceField
        isCatalog:
          type: boolean
        permalink:
          type: string
        endDate:
          type: string
          format: date-time
    SkuMarketPlaceBase:
      title: SkuMarketPlaceBase
      x-examples: {}
      allOf:
        - $ref: '#/components/schemas/SkuMarketPlacePut'
        - properties:
            title:
              type: string
            ean:
              type: string
            skuInMarketplace:
              type: string
            priceFactor:
              type: number
              format: double
              minimum: 0
              exclusiveMaximum: true
            price:
              type: number
              format: double
              minimum: 0
              exclusiveMaximum: true
            discountPrice:
              type: number
              format: double
              minimum: 0
              exclusiveMaximum: true
            idAccount:
              type: integer
              format: int64
              minimum: 0
              exclusiveMaximum: true
            accountName:
              type: string
            marketPlace:
              type: string
    OrderPut:
      title: OrderPut
      type: object
      properties:
        marketPlaceUrl:
          type: string
        marketPlaceStatus:
          type: string
        marketPlaceStatusComplement:
          type: string
        shipping:
          $ref: ./remote_pt.yaml#/components/schemas/ApiShipping
        billingAddress:
          $ref: ./remote_pt.yaml#/components/schemas/ApiBillingAddress
        buyer:
          $ref: ./remote_pt.yaml#/components/schemas/ApiBuyer
        payments:
          type: array
          items:
            $ref: ./remote_pt.yaml#/components/schemas/ApiPayment
        observation:
          type: string
        anymarketAddress:
          $ref: ./remote_pt.yaml#/components/schemas/ApiAnymarketOrderAddress
        tracking:
          $ref: ./remote_pt.yaml#/components/schemas/ApiTracking
        items:
          type: array
          items:
            $ref: '#/components/schemas/OrderItem'
        documentIntermediator:
          type: string
        intermediateRegistrationId:
          type: string
        documentPaymentInstitution:
          type: string
        subChannel:
          type: string
        subChannelNormalized:
          type: string
    OrderItem:
      title: OrderItem
      type: object
      properties:
        partnerId:
          type: string
        sku:
          type: object
          properties:
            partnerId:
              type: string
        amount:
          type: number
          format: double
          minimum: 0
          exclusiveMaximum: true
        unit:
          type: number
          format: double
          minimum: 0
          exclusiveMaximum: true
        gross:
          type: number
          format: double
          minimum: 0
          exclusiveMaximum: true
        total:
          type: number
          format: double
          minimum: 0
          exclusiveMaximum: true
        discount:
          type: number
          format: double
          minimum: 0
          exclusiveMaximum: true
        shippings:
          type: array
          items:
            $ref: ./remote_pt.yaml#/components/schemas/ApiOrderItemShipping
        marketPlaceId:
          type: string
        orderItemId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMaximum: true
    OrderPost:
      title: OrderPost
      allOf:
        - type: object
          properties:
            marketPlaceId:
              type: string
            marketPlaceNumber:
              type: string
            createdAt:
              type: string
              format: date-time
            discount:
              type: number
              format: double
              minimum: 0
              exclusiveMaximum: true
            freight:
              type: number
              format: double
              minimum: 0
              exclusiveMaximum: true
            productNet:
              type: number
              format: double
              minimum: 0
              exclusiveMaximum: true
            gross:
              type: number
              format: double
              minimum: 0
              exclusiveMaximum: true
            total:
              type: number
              format: double
              minimum: 0
              exclusiveMaximum: true
            interestValue:
              type: number
              format: double
              minimum: 0
              exclusiveMaximum: true
            items:
              format: double
              type: array
              items:
                $ref: '#/components/schemas/OrderItem'
            idAccount:
              type: integer
              format: int64
              minimum: 0
              exclusiveMaximum: true
            accountName:
              type: string
            status:
              type: string
              enum:
                - PENDING
                - PAID
                - INVOICED
                - SHIPPED
                - DELIVERED
                - CANCELED
            subChannel:
              type: string
            subChannelNormalized:
              type: string
        - $ref: '#/components/schemas/OrderPut'
      x-examples: {}
      description: ''
    Invoice:
      title: Invoice
      type: object
      properties:
        accessKey:
          type: string
        series:
          type: string
        number:
          type: string
        date:
          type: string
          format: date-time
        linkNfe:
          type: string
          format: date-time
        invoiceLink:
          type: string
        cfop:
          type: string
    Order:
      title: Order
      allOf:
        - type: object
          properties:
            id:
              type: integer
              format: int64
              minimum: 0
              exclusiveMaximum: true
            partnerId:
              type: string
            paymentDate:
              type: string
              format: date-time
            cancelDate:
              type: string
              format: date-time
            cancellationCode:
              type: string
              enum:
                - WITHOUT_STOCK
                - SHIPPING_ADDRESS
                - CUSTOMER_EXCHANGE
                - GENERAL_ADJUSTMENT
                - CUSTOMER_RETURN
                - BUYER_CANCELED
                - OTHER
            transmissionStatus:
              type: string
              enum:
                - OK
                - ERROR
                - WAITING
            marketPlaceShipmentStatus:
              type: string
            invoice:
              $ref: '#/components/schemas/Invoice'
            deliveryStatus:
              type: string
              enum:
                - UNKNOWN
                - IN_TRANSIT
                - DELIVERED
                - HOLD_FOR_PICKUP
                - DELAYED
                - DELIVERED_LATE
            shipmentExceptionDate:
              type: string
              format: date-time
            shipmentExceptionDescription:
              type: string
            metadata:
              type: object
              properties:
                string:
                  type: string
            cancelDetails:
              type: string
            documentIntermediator:
              type: string
            intermediateRegistrationId:
              type: string
            documentPaymentInstitution:
              type: string
        - $ref: '#/components/schemas/OrderPost'
    OrderStatusUpdate:
      title: OrderStatusUpdate
      type: object
      properties:
        success:
          type: boolean
        errorMessage:
          type: string
        orderMessage:
          $ref: ./remote_pt.yaml#/components/schemas/SkuMarketPlaceMessage
        marketPlaceStatus:
          type: string
    Page_Order:
      title: Page_Brand
      allOf:
        - properties:
            links:
              type: array
              description: Referências de paginação
              uniqueItems: false
              minItems: 1
              maxItems: 1
              items:
                $ref: '#/components/schemas/PageLinks'
            content:
              type: array
              description: Lista de marcas
              items:
                $ref: '#/components/schemas/Order'
            page:
              $ref: '#/components/schemas/PageMetadata'
      x-tags:
        - Marcas
      description: ''
      type: object
    PageLinks:
      title: PageLinks
      type: object
      x-tags:
        - page
        - pageable
      properties:
        rel:
          type: string
          description: Relacionamento do hyperlink
          example: next
        href:
          type: string
          description: Url de definição do recurso
          example: 'https://.../v2/component?limit=5&offset=5'
          format: uri
    PageMetadata:
      title: PageMetadata
      type: object
      properties:
        size:
          type: integer
          description: Tamanho da página
          format: int64
          minimum: 5
          readOnly: true
        totalElements:
          type: integer
          description: Total de elementos existentes
          format: int64
          minimum: 0
          readOnly: true
        totalPages:
          type: integer
          description: Total de páginas disponíveis
          format: int64
          minimum: 1
          readOnly: true
        number:
          type: integer
          description: Número da página atual
          format: int64
          minimum: 1
          readOnly: true
      x-tags:
        - page
        - pageable
    CanceledStatusDTO:
      title: CanceledStatusDTO
      type: object
      properties:
        date:
          type: string
          format: date-time
        code:
          type: string
          enum:
            - WITHOUT_STOCK
            - SHIPPING_ADDRESS
            - CUSTOMER_EXCHANGE
            - GENERAL_ADJUSTMENT
            - CUSTOMER_RETURN
            - BUYER_CANCELED
            - OTHER
        marketplaceStatus:
          type: string
  securitySchemes:
    appId:
      name: appId
      type: apiKey
      in: header
      description: App id fornecido pela Anymarket
    token:
      name: token
      type: apiKey
      in: header
  parameters:
    offset:
      name: offset
      in: query
      required: false
      schema:
        type: integer
        format: int64
        default: 1
        minimum: 1
        exclusiveMaximum: true
        example: 1
      description: Posição de início da paginação
    limit:
      name: limit
      in: query
      required: false
      schema:
        type: integer
        format: int64
        minimum: 5
        exclusiveMaximum: true
        default: 5
        example: 5
      description: Número máximo de marcas
    sort:
      name: sort
      in: query
      required: false
      schema:
        type: string
      description: Atributo para ordenação
  examples:
    brands_200:
      value:
        links:
          - rel: string
            href: string
        content:
          - rel: string
            href: string
        page:
          size: 0
          totalElements: 0
          totalPages: 0
          number: 0
security:
  - token: []
  - appId: []
